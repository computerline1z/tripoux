# 	Prototypes file for tracing PINtool v2
#
#	Prototypes can have the following forms :
#	RETURNTYPE functionName([IN|OUT|IN_OUT] ARG1TYPE, [IN|OUT|IN_OUT] ARG2TYPE);
#	RETURNTYPE functionName(VOID);
#	
#	For the variable arguments functions (like printf()) we currently only dump the necessary args.
#
#	The types are defined in two flavors : basic and complex.
#	Basic types can be :
#			- DX, where X is a number >= 0, i.e. direct dump of memory, D0 stands for no dump arguments.
#			- IX, where X is a number >0, i.e. indirect dump of memory.
#			- CX, where X is a number >0, i.e. direct dump of memory and display like chars.
#			- SA, i.e. ansi c-string.
#			- SW, i.e. unicode c-string.
#
#	Complex types can be:
#			- D[TYPE1,TYPE2], i.e. a structured composed by TYPE1 and TYPE2, each of them can be complex or basic.
#			- I[CTYPE], i.e. a pointer to a complex type.


** BASIC_TYPES **

INT			D4
UINT		D4
CHAR		C1
CHAR*		SA
VOID*		D4
VOID		D0
PVOID		D4
HANDLE		D4
HMODULE		D4
HINSTANCE	D4
HICON		D4
HCURSOR		D4
PHKEY		D4
LSTATUS		D4
SIZE_T		D4
BOOL		D4
DWORD		D4
PDWORD		I4
FARPROC		D4
HGLOBAL		D4
LPVOID		D4
LPCVOID		D4
LPCSTR		SA
LPDWORD		D4
LPTSTR		SA
LPTWSTR		SW
LPCWSTR		SW
LPWSTR		SW
LPCH		SA
LPWCH		SW
LPSTR		SA
LPCTSTR		SA
WCHAR_T*	SW
WCHAR_T		C1
LPWCH		SW
TIME_T		D4
TIME_T*		I4
NTSTATUS	D4
UNKNOWN		D4

** COMPLEX_TYPES **

SECURITY_ATTRIBUTES		D[DWORD,LPVOID,BOOL]
LPSECURITY_ATTRIBUTES	I[SECURITY_ATTRIBUTES]


** PROTOTYPES **

# ---------------------------------------------------------------------
# Win32 APIs
# ---------------------------------------------------------------------

BOOL EncryptFileA(IN LPCSTR);
BOOL EncryptFileW(IN LPCWSTR);
BOOL DecryptFileA(IN LPCSTR,IN DWORD);
BOOL DecryptFileW(IN LPCWSTR,IN DWORD);
BOOL FileEncryptionStatusA(IN LPCSTR,OUT LPDWORD);
BOOL FileEncryptionStatusW(IN LPCWSTR,OUT LPDWORD);
DWORD OpenEncryptedFileRawA(IN LPCSTR,IN ULONG,OUT PVOID);
DWORD OpenEncryptedFileRawW(IN LPCWSTR,IN ULONG,OUT PVOID);
DWORD ReadEncryptedFileRaw(IN PFE_EXPORT_FUNC,IN PVOID,IN PVOID);
DWORD WriteEncryptedFileRaw(IN,IN PVOID,IN PVOID);
VOID CloseEncryptedFileRaw(IN PVOID);
BOOL IsTextUnicode(IN VOID*,IN INT,IN_OUT LPINT);
BOOL ClearEventLogA(IN HANDLE,IN LPCSTR);
BOOL ClearEventLogW(IN HANDLE,IN LPCWSTR);
BOOL BackupEventLogA(IN HANDLE,IN LPCSTR);
BOOL BackupEventLogW(IN HANDLE,IN LPCWSTR);
BOOL CloseEventLog(IN HANDLE);
BOOL DeregisterEventSource(IN HANDLE);
BOOL NotifyChangeEventLog(IN HANDLE,IN HANDLE);
BOOL GetNumberOfEventLogRecords(IN HANDLE,OUT PDWORD);
BOOL GetOldestEventLogRecord(IN HANDLE,OUT PDWORD);
BOOL ReadEventLogA(IN HANDLE,IN DWORD,IN DWORD,OUT LPVOID,IN DWORD,OUT DWORD,OUT DWORD);
BOOL ReadEventLogW(IN HANDLE,IN DWORD,IN DWORD,OUT LPVOID,IN DWORD,OUT DWORD,OUT DWORD);
BOOL ReportEventA(IN HANDLE,IN WORD,IN WORD,IN DWORD,IN PSID,IN WORD,IN DWORD,IN LPCSTR,IN LPVOID);
BOOL ReportEventW(IN HANDLE,IN WORD,IN WORD,IN DWORD,IN PSID,IN WORD,IN DWORD,IN LPCWSTR,IN LPVOID);
BOOL GetEventLogInformation(IN HANDLE,IN DWORD,IN LPVOID,IN DWORD,OUT LPDWORD);
BOOL DuplicateToken(IN HANDLE,IN SECURITY_IMPERSONATION_LEVEL,OUT PHANDLE);
BOOL GetKernelObjectSecurity(IN HANDLE,IN SECURITY_INFORMATION,IN PSECURITY_DESCRIPTOR,IN DWORD,OUT LPDWORD lpNeeded);
BOOL ImpersonateNamedPipeClient(IN HANDLE);
BOOL ImpersonateSelf(IN SECURITY_IMPERSONATION_LEVEL);
BOOL RevertToSelf(VOID);
BOOL Set(IN PHANDLE,IN HANDLE);
BOOL AccessCheck(IN PSECURITY_DESCRIPTOR,IN HANDLE,IN DWORD,IN PGENERIC_MAPPING,OUT PPRIVILEGE_SET,IN_OUT LPDWORD Length,OUT LPDWORD,OUT LPBOOL);
BOOL AccessCheckByType(IN PSECURITY_DESCRIPTOR,IN PSID,IN HANDLE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,OUT PPRIVILEGE_SET,IN_OUT LPDWORD Length,OUT LPDWORD,OUT LPBOOL);
BOOL AccessCheckByTypeResultList(IN PSECURITY_DESCRIPTOR,IN PSID,IN HANDLE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,OUT PPRIVILEGE_SET,IN_OUT LPDWORD Length,OUT LPDWORD,OUT LPDWORD);
BOOL OpenProcessToken(IN HANDLE,IN DWORD,OUT PHANDLE);
BOOL OpenThreadToken(IN HANDLE,IN DWORD,IN BOOL,OUT PHANDLE);
BOOL GetTokenInformation(IN HANDLE,IN TOKEN_INFORMATION_CLASS,,) LPVOID TokenInformation,IN DWORD TokenInformationLength,OUT PDWORD ReturnLength);
BOOL SetTokenInformation(IN HANDLE,IN TOKEN_INFORMATION_CLASS,) LPVOID TokenInformation,IN DWORD TokenInformationLength);
BOOL AdjustTokenPrivileges(IN HANDLE,IN BOOL,IN PTOKEN_PRIVILEGES,IN DWORD,OUT PTOKEN_PRIVILEGES,OUT PDWORD);
BOOL AdjustTokenGroups(IN HANDLE,IN BOOL,IN PTOKEN_GROUPS,IN DWORD,OUT PTOKEN_GROUPS,OUT PDWORD);
BOOL PrivilegeCheck(IN HANDLE,IN_OUT PPRIVILEGE_SET,OUT LPBOOL);
BOOL AccessCheckAndAuditAlarmA(IN LPCSTR,IN LPVOID,IN LPSTR,IN LPSTR,IN PSECURITY_DESCRIPTOR,IN DWORD,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPBOOL,OUT LPBOOL);
BOOL AccessCheckAndAuditAlarmW(IN LPCWSTR,IN LPVOID,IN LPWSTR,IN LPWSTR,IN PSECURITY_DESCRIPTOR,IN DWORD,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPBOOL,OUT LPBOOL);
BOOL AccessCheckByTypeAndAuditAlarmA(IN LPCSTR,IN LPVOID,IN LPCSTR,IN LPCSTR,IN PSECURITY_DESCRIPTOR,IN PSID,IN DWORD,IN AUDIT_EVENT_TYPE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPBOOL,OUT LPBOOL);
BOOL AccessCheckByTypeAndAuditAlarmW(IN LPCWSTR,IN LPVOID,IN LPCWSTR,IN LPCWSTR,IN PSECURITY_DESCRIPTOR,IN PSID,IN DWORD,IN AUDIT_EVENT_TYPE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPBOOL,OUT LPBOOL);
BOOL AccessCheckByTypeResultListAndAuditAlarmA(IN LPCSTR,IN LPVOID,IN LPCSTR,IN LPCSTR,IN PSECURITY_DESCRIPTOR,IN PSID,IN DWORD,IN AUDIT_EVENT_TYPE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPDWORD,OUT LPBOOL);
BOOL AccessCheckByTypeResultListAndAuditAlarmW(IN LPCWSTR,IN LPVOID,IN LPCWSTR,IN LPCWSTR,IN PSECURITY_DESCRIPTOR,IN PSID,IN DWORD,IN AUDIT_EVENT_TYPE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPDWORD,OUT LPBOOL);
BOOL AccessCheckByTypeResultListAndAuditAlarmByHandleA(IN LPCSTR,IN LPVOID,IN HANDLE,IN LPCSTR,IN LPCSTR,IN PSECURITY_DESCRIPTOR,IN PSID,IN DWORD,IN AUDIT_EVENT_TYPE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPDWORD,OUT LPBOOL);
BOOL AccessCheckByTypeResultListAndAuditAlarmByHandleW(IN LPCWSTR,IN LPVOID,IN HANDLE,IN LPCWSTR,IN LPCWSTR,IN PSECURITY_DESCRIPTOR,IN PSID,IN DWORD,IN AUDIT_EVENT_TYPE,IN DWORD,IN_OUT POBJECT_TYPE_LIST,IN DWORD Length,IN PGENERIC_MAPPING,IN BOOL,OUT LPDWORD,OUT LPDWORD,OUT LPBOOL);
BOOL ObjectOpenAuditAlarmA(IN LPCSTR,IN LPVOID,IN LPSTR,IN LPSTR,IN PSECURITY_DESCRIPTOR,IN HANDLE,IN DWORD,IN DWORD,IN PPRIVILEGE_SET,IN BOOL,IN BOOL,OUT LPBOOL);
BOOL ObjectOpenAuditAlarmW(IN LPCWSTR,IN LPVOID,IN LPWSTR,IN LPWSTR,IN PSECURITY_DESCRIPTOR,IN HANDLE,IN DWORD,IN DWORD,IN PPRIVILEGE_SET,IN BOOL,IN BOOL,OUT LPBOOL);
BOOL ObjectPrivilegeAuditAlarmA(IN LPCSTR,IN LPVOID,IN HANDLE,IN DWORD,IN PPRIVILEGE_SET,IN BOOL);
BOOL ObjectPrivilegeAuditAlarmW(IN LPCWSTR,IN LPVOID,IN HANDLE,IN DWORD,IN PPRIVILEGE_SET,IN BOOL);
BOOL ObjectCloseAuditAlarmA(IN LPCSTR,IN LPVOID,IN BOOL);
BOOL ObjectCloseAuditAlarmW(IN LPCWSTR,IN LPVOID,IN BOOL);
BOOL ObjectDeleteAuditAlarmA(IN LPCSTR,IN LPVOID,IN BOOL);
BOOL ObjectDeleteAuditAlarmW(IN LPCWSTR,IN LPVOID,IN BOOL);
BOOL PrivilegedServiceAuditAlarmA(IN LPCSTR,IN LPCSTR,IN HANDLE,IN PPRIVILEGE_SET,IN BOOL);
BOOL PrivilegedServiceAuditAlarmW(IN LPCWSTR,IN LPCWSTR,IN HANDLE,IN PPRIVILEGE_SET,IN BOOL);
BOOL IsWellKnownSid(IN PSID,IN WELL_KNOWN_SID_TYPE);
BOOL CreateWellKnownSid(IN WELL_KNOWN_SID_TYPE,IN PSID,OUT PSID,IN_OUT DWORD);
BOOL EqualDomainSid(IN PSID,IN PSID,OUT BOOL);
BOOL GetWindowsAccountDomainSid(IN PSID,OUT PSID,IN_OUT DWORD*);
BOOL IsValidSid(IN PSID);
BOOL EqualSid(IN PSID,IN PSID);
BOOL EqualPrefixSid(IN PSID,IN PSID);
DWORD GetSidLengthRequired(IN UCHAR);
BOOL AllocateAndInitializeSid(IN PSID_IDENTIFIER_AUTHORITY,IN BYTE,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,OUT PSID);
PVOID FreeSid(IN PSID);
BOOL Initialize(OUT PSID,IN PSID_IDENTIFIER_AUTHORITY,IN BYTE);
DWORD GetLengthSid(IN PSID);
BOOL CopySid(IN DWORD,OUT PSID,IN PSID);
BOOL AreAllAccessesGranted(IN DWORD,IN DWORD);
BOOL AreAnyAccessesGranted(IN DWORD,IN DWORD);
VOID MapGenericMask(IN_OUT PDWORD,IN PGENERIC_MAPPING);
BOOL IsValidAcl(IN PACL);
BOOL InitializeAcl(OUT PACL,IN DWORD,IN DWORD);
BOOL GetAclInformation(IN PACL,OUT LPVOID Information,IN DWORD,IN ACL_INFORMATION_CLASS);
BOOL SetAclInformation(IN_OUT PACL,IN LPVOID Information,IN DWORD,IN ACL_INFORMATION_CLASS);
BOOL AddAce(IN_OUT PACL,IN DWORD,IN DWORD,IN LPVOID,IN DWORD);
BOOL DeleteAce(IN_OUT PACL,IN DWORD);
BOOL GetAce(IN PACL,IN DWORD,OUT LPVOID);
BOOL AddAccessAllowedAce(IN_OUT PACL,IN DWORD,IN DWORD,IN PSID);
BOOL AddAccessAllowedAceEx(IN_OUT PACL,IN DWORD,IN DWORD,IN DWORD,IN PSID);
BOOL AddAccessDeniedAce(IN_OUT PACL,IN DWORD,IN DWORD,IN PSID);
BOOL AddAccessDeniedAceEx(IN_OUT PACL,IN DWORD,IN DWORD,IN DWORD,IN PSID);
BOOL AddAuditAccessAce(IN_OUT PACL,IN DWORD,IN DWORD,IN PSID,IN BOOL,IN BOOL);
BOOL AddAuditAccessAceEx(IN_OUT PACL,IN DWORD,IN DWORD,IN DWORD,IN PSID,IN BOOL,IN BOOL);
BOOL AddAccessAllowedObjectAce(IN_OUT PACL,IN DWORD,IN DWORD,IN DWORD,IN GUID,IN GUID,IN PSID);
BOOL AddAccessDeniedObjectAce(IN_OUT PACL,IN DWORD,IN DWORD,IN DWORD,IN GUID,IN GUID,IN PSID);
BOOL AddAuditAccessObjectAce(IN_OUT PACL,IN DWORD,IN DWORD,IN DWORD,IN GUID,IN GUID,IN PSID,IN BOOL,IN BOOL);
BOOL FindFirstFreeAce(IN PACL,OUT LPVOID);
BOOL InitializeSecurityDescriptor(OUT PSECURITY_DESCRIPTOR,IN DWORD);
BOOL IsValidSecurityDescriptor(IN PSECURITY_DESCRIPTOR);
DWORD GetSecurityDescriptorLength(IN PSECURITY_DESCRIPTOR);
BOOL GetSecurityDescriptorControl(IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR_CONTROL,OUT LPDWORD);
BOOL SetSecurityDescriptorControl(IN PSECURITY_DESCRIPTOR,IN SECURITY_DESCRIPTOR_CONTROL,IN SECURITY_DESCRIPTOR_CONTROL);
BOOL SetSecurityDescriptorDacl(IN_OUT PSECURITY_DESCRIPTOR,IN BOOL,IN PACL,IN BOOL);
BOOL GetSecurityDescriptorDacl(IN PSECURITY_DESCRIPTOR,OUT LPBOOL,OUT PACL,OUT LPBOOL);
BOOL SetSecurityDescriptorSacl(IN_OUT PSECURITY_DESCRIPTOR,IN BOOL,IN PACL,IN BOOL);
BOOL GetSecurityDescriptorSacl(IN PSECURITY_DESCRIPTOR,OUT LPBOOL,OUT PACL,OUT LPBOOL);
BOOL SetSecurityDescriptorOwner(IN_OUT PSECURITY_DESCRIPTOR,IN PSID,IN BOOL);
BOOL GetSecurityDescriptorOwner(IN PSECURITY_DESCRIPTOR,OUT PSID,OUT LPBOOL);
BOOL SetSecurityDescriptorGroup(IN_OUT PSECURITY_DESCRIPTOR,IN PSID,IN BOOL);
BOOL GetSecurityDescriptorGroup(IN PSECURITY_DESCRIPTOR,OUT PSID,OUT LPBOOL);
DWORD Set(IN_OUT PSECURITY_DESCRIPTOR,IN PUCHAR);
DWORD Get(IN PSECURITY_DESCRIPTOR,OUT PUCHAR);
BOOL CreatePrivateObjectSecurity(IN PSECURITY_DESCRIPTOR,IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR,IN BOOL,IN HANDLE,IN PGENERIC_MAPPING);
BOOL ConvertToAutoInheritPrivateObjectSecurity(IN PSECURITY_DESCRIPTOR,IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR,IN GUID,IN BOOLEAN,IN PGENERIC_MAPPING);
BOOL CreatePrivateObjectSecurityEx(IN PSECURITY_DESCRIPTOR,IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR,IN GUID ObjectType,IN BOOL,IN ULONG,IN HANDLE,IN PGENERIC_MAPPING);
BOOL CreatePrivateObjectSecurityWithMultipleInheritance(IN PSECURITY_DESCRIPTOR,IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR,IN GUID ObjectTypes,IN ULONG,IN BOOL,IN ULONG,IN HANDLE,IN PGENERIC_MAPPING);
BOOL SetPrivateObjectSecurity(IN SECURITY_INFORMATION,IN PSECURITY_DESCRIPTOR,IN_OUT PSECURITY_DESCRIPTOR,IN PGENERIC_MAPPING,IN HANDLE);
BOOL SetPrivateObjectSecurityEx(IN SECURITY_INFORMATION,IN PSECURITY_DESCRIPTOR,IN_OUT PSECURITY_DESCRIPTOR,IN ULONG,IN PGENERIC_MAPPING,IN HANDLE);
BOOL GetPrivateObjectSecurity(IN PSECURITY_DESCRIPTOR,IN SECURITY_INFORMATION,OUT PSECURITY_DESCRIPTOR,IN DWORD,OUT PDWORD);
BOOL DestroyPrivateObjectSecurity(IN PSECURITY_DESCRIPTOR );
BOOL MakeSelfRelativeSD(IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR,IN_OUT LPDWORD);
BOOL MakeAbsoluteSD(IN PSECURITY_DESCRIPTOR,OUT PSECURITY_DESCRIPTOR,IN_OUT LPDWORD,OUT PACL,IN_OUT LPDWORD,OUT PACL,IN_OUT LPDWORD,OUT PSID,IN_OUT LPDWORD,OUT PSID,IN_OUT LPDWORD);
BOOL MakeAbsoluteSD2(IN_OUT PSECURITY_DESCRIPTOR,IN_OUT LPDWORD);
BOOL SetFileSecurityA(IN LPCSTR,IN SECURITY_INFORMATION,IN PSECURITY_DESCRIPTOR);
BOOL SetFileSecurityW(IN LPCWSTR,IN SECURITY_INFORMATION,IN PSECURITY_DESCRIPTOR);
BOOL GetFileSecurityA(IN LPCSTR,IN SECURITY_INFORMATION,OUT PSECURITY_DESCRIPTOR,IN DWORD,OUT LPDWORD lpNeeded);
BOOL GetFileSecurityW(IN LPCWSTR,IN SECURITY_INFORMATION,OUT PSECURITY_DESCRIPTOR,IN DWORD,OUT LPDWORD lpNeeded);
BOOL SetKernelObjectSecurity(IN HANDLE,IN SECURITY_INFORMATION,IN PSECURITY_DESCRIPTOR);
BOOL LookupAccountA(IN LPCSTR,IN PSID,OUT LPSTR,IN_OUT LPDWORD cch,OUT LPSTR ReferencedDomain,IN_OUT LPDWORD cchReferencedDomain,OUT PSID_NAME_USE);
BOOL LookupAccountW(IN LPCWSTR,IN PSID,OUT LPWSTR,IN_OUT LPDWORD cch,OUT LPWSTR ReferencedDomain,IN_OUT LPDWORD cchReferencedDomain,OUT PSID_NAME_USE);
BOOL LookupAccountNameA(IN LPCSTR,IN LPCSTR,OUT PSID,IN_OUT LPDWORD cb,OUT LPSTR,IN_OUT LPDWORD cch,OUT PSID_NAME_USE);
BOOL LookupAccountNameW(IN LPCWSTR,IN LPCWSTR,OUT PSID,IN_OUT LPDWORD cb,OUT LPWSTR,IN_OUT LPDWORD cch,OUT PSID_NAME_USE);
BOOL LookupPrivilegeValueA(IN LPCSTR,IN LPCSTR,OUT PLUID);
BOOL LookupPrivilegeValueW(IN LPCWSTR,IN LPCWSTR,OUT PLUID);
BOOL LookupPrivilegeNameA(IN LPCSTR,IN PLUID,OUT LPSTR,IN_OUT LPDWORD);
BOOL LookupPrivilegeNameW(IN LPCWSTR,IN PLUID,OUT LPWSTR,IN_OUT LPDWORD);
BOOL LookupPrivilegeDisplayNameA(IN LPCSTR,IN LPCSTR,OUT LPSTR,IN_OUT LPDWORD,OUT LPDWORD);
BOOL LookupPrivilegeDisplayNameW(IN LPCWSTR,IN LPCWSTR,OUT LPWSTR,IN_OUT LPDWORD,OUT LPDWORD);
BOOL AllocateLocallyUniqueId(OUT PLUID);
BOOL GetUserNameA(OUT LPSTR,IN_OUT LPDWORD);
BOOL GetUserNameW(OUT LPWSTR lpBuffer,IN_OUT LPDWORD);
BOOL LogonUserA(IN LPCSTR,IN LPCSTR,IN LPCSTR,IN DWORD,IN DWORD,OUT PHANDLE);
BOOL LogonUserW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,IN DWORD,IN DWORD,OUT PHANDLE);
BOOL LogonUserExA(IN LPCSTR,IN LPCSTR,IN LPCSTR,IN DWORD,IN DWORD,OUT PHANDLE,OUT PSID,OUT PVOID,OUT LPDWORD,OUT PQUOTA_LIMITS);
BOOL LogonUserExW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,IN DWORD,IN DWORD,OUT PHANDLE,OUT PSID,OUT PVOID,OUT LPDWORD,OUT PQUOTA_LIMITS);
BOOL ImpersonateLoggedOnUser(IN HANDLE);
BOOL CreateProcessAsUserA(IN HANDLE,IN LPCSTR,IN_OUT LPSTR,IN LPSECURITY_ATTRIBUTES,IN LPSECURITY_ATTRIBUTES,IN BOOL,IN DWORD,IN LPVOID,IN LPCSTR,IN LPSTARTUPINFOA,OUT LPPROCESS_INFORMATION);
BOOL CreateProcessAsUserW(IN HANDLE,IN LPCWSTR,IN_OUT LPWSTR,IN LPSECURITY_ATTRIBUTES,IN LPSECURITY_ATTRIBUTES,IN BOOL,IN DWORD,IN LPVOID,IN LPCWSTR,IN LPSTARTUPINFOW,OUT LPPROCESS_INFORMATION);
BOOL CreateProcessWithLogonW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,IN DWORD,IN LPCWSTR,IN_OUT LPWSTR,IN DWORD,IN LPVOID,IN LPCWSTR,IN LPSTARTUPINFOW,OUT LPPROCESS_INFORMATION);
BOOL CreateProcessWitW(IN HANDLE,IN DWORD,IN LPCWSTR,IN_OUT LPWSTR,IN DWORD,IN LPVOID,IN LPCWSTR,IN LPSTARTUPINFOW,OUT LPPROCESS_INFORMATION);
BOOL ImpersonateAnonymousToken(IN HANDLE);
BOOL DuplicateTokenEx(IN HANDLE,IN DWORD,IN LPSECURITY_ATTRIBUTES,IN SECURITY_IMPERSONATION_LEVEL,IN TOKEN_TYPE,OUT PHANDLE);
BOOL CreateRestrictedToken(IN HANDLE,IN DWORD,IN DWORD,IN PSID_AND_ATTRIBUTES,IN DWORD,IN PLUID_AND_ATTRIBUTES,IN DWORD,IN PSID_AND_ATTRIBUTES,OUT PHANDLE);
BOOL IsTokenRestricted(IN HANDLE);
BOOL IsTokenUntrusted(IN HANDLE);
BOOL CheckTokenMembership(IN HANDLE,IN PSID,OUT PBOOL);
BOOL GetCurrentHwProfileA(OUT LPHW_PROFILE_INFOA);
BOOL GetCurrentHwProfileW(OUT LPHW_PROFILE_INFOW);
LONG RegOpenKey(IN HKEY,IN LPCTSTR,OUT PHKEY);
LONG RegOpenKeyA(IN HKEY,IN LPCSTR,OUT PHKEY);
LONG RegOpenKeyW(IN HKEY,IN LPCWSTR,OUT PHKEY);
LSTATUS RegCloseKey(IN HKEY);
LSTATUS RegQueryValueExA(IN HKEY,IN LPCSTR,IN LPDWORD,OUT LPDWORD,OUT LPBYTE,IN_OUT LPDWORD);
LSTATUS RegOpenKeyExA(IN HKEY,IN LPCSTR,IN DWORD,IN REGSAM,OUT PHKEY);
LSTATUS RegEnumKeyExA(IN HKEY,IN DWORD,OUT LPSTR,OUT LPDWORD,IN LPDWORD,OUT LPSTR,OUT LPDWORD,OUT FILETIME*);
INT sprintf(OUT CHAR*,IN CHAR*);
SIZE_T strlen(IN CHAR*);
VOID RtlMoveMemory(IN VOID*,IN VOID*,IN INT);
VOID RtlFillMemory(IN VOID*,IN SIZE_T,IN CHAR);
VOID RtlZeroMemory(IN VOID*,IN INT);
PVOID RtlEncodePointer(IN PVOID);
PVOID RtlDecodePointer(IN PVOID);
VOID* memset(IN VOID*,IN INT,IN SIZE_T);
HCURSOR LoadCursor(IN HINSTANCE,IN LPCTSTR);
HCURSOR LoadCursor(IN HINSTANCE,IN LPCTSTR);
CHAR* strchr(IN CHAR*,IN CHAR);
INT LoadStringA(IN HINSTANCE,IN UINT,OUT LPSTR,IN INT);
INT LoadStringW(IN HINSTANCE,IN UINT,OUT LPWSTR,IN INT);
BOOL FreeLibrary(IN HMODULE);
VOID FreeLibraryAndExitThread(IN HMODULE,IN DWORD);
BOOL DisableThreadLibraryCalls(IN HMODULE);
FARPROC GetProcAddress(IN HMODULE,IN LPCSTR);
DWORD GetVersion(VOID);
HGLOBAL GlobalAlloc(IN UINT,IN SIZE_T);
HGLOBAL GlobalReAlloc(IN HGLOBAL,IN SIZE_T,IN UINT);
SIZE_T GlobalSize(IN HGLOBAL);
UINT GlobalFlags(IN HGLOBAL);
LPVOID GlobalLock(IN HGLOBAL);
HGLOBAL GlobalHandle(IN LPCVOID);
BOOL GlobalUnlock(IN HGLOBAL);
HGLOBAL GlobalFree(IN HGLOBAL);
SIZE_T GlobalCompact(IN DWORD);
VOID GlobalFix(IN HGLOBAL);
VOID GlobalUnfix(IN HGLOBAL);
LPVOID GlobalWire(IN HGLOBAL);
BOOL GlobalUnWire(IN HGLOBAL);
VOID GlobalMemoryStatus(OUT LPMEMORYSTATUS);
BOOL GlobalMemoryStatusEx(OUT LPMEMORYSTATUSEX);
HLOCAL LocalAlloc(IN UINT,IN SIZE_T);
HLOCAL LocalReAlloc(IN HLOCAL,IN SIZE_T,IN UINT);
LPVOID LocalLock(IN HLOCAL);
HLOCAL LocalHandle(IN LPCVOID);
BOOL LocalUnlock(IN HLOCAL);
SIZE_T LocalSize(IN HLOCAL);
UINT LocalFlags(IN HLOCAL);
HLOCAL LocalFree(IN HLOCAL);
SIZE_T LocalShrink(IN HLOCAL,IN UINT);
SIZE_T LocalCompact(IN UINT);
BOOL FlushInstructionCache(IN HANDLE,IN LPCVOID,IN SIZE_T);
LPVOID VirtualAlloc(IN LPVOID,IN SIZE_T,IN DWORD,IN DWORD);
BOOL VirtualFree(IN LPVOID,IN SIZE_T,IN DWORD);
BOOL VirtualProtect(IN LPVOID,IN SIZE_T,IN DWORD,OUT PDWORD);
SIZE_T VirtualQuery(IN LPCVOID,OUT PMEMORY_BASIC_INFORMATION,IN SIZE_T);
LPVOID VirtualAllocEx(IN HANDLE,IN LPVOID,IN SIZE_T,IN DWORD,IN DWORD);
UINT GetWriteWatch(IN DWORD,IN PVOID,IN SIZE_T,OUT PVOID*,IN_OUT ULONG_PTR*,OUT PULONG);
UINT ResetWriteWatch(IN LPVOID,IN SIZE_T);
SIZE_T GetLargePageMinimum(VOID);
UINT EnumSystemFirmwareTables(IN DWORD,OUT PVOID,IN DWORD);
UINT GetSystemFirmwareTable(IN DWORD,IN DWORD,OUT PVOID,IN DWORD);
BOOL VirtualFreeEx(IN HANDLE,IN LPVOID,IN SIZE_T,IN DWORD);
BOOL VirtualProtectEx(IN HANDLE,IN LPVOID,IN SIZE_T,IN DWORD,OUT PDWORD);
SIZE_T VirtualQueryEx(IN HANDLE,IN LPCVOID,OUT PMEMORY_BASIC_INFORMATION,IN SIZE_T);
HANDLE HeapCreate(IN DWORD,IN SIZE_T,IN SIZE_T);
BOOL HeapDestroy(IN HANDLE);
LPVOID HeapAlloc(IN HANDLE,IN DWORD,IN SIZE_T);
LPVOID HeapReAlloc(IN_OUT HANDLE,IN DWORD,IN LPVOID,IN SIZE_T);
BOOL HeapFree(IN HANDLE,IN DWORD,IN LPVOID);
SIZE_T HeapSize(IN HANDLE,IN DWORD,IN LPCVOID);
BOOL HeapValidate(IN HANDLE,IN DWORD,IN LPCVOID);
SIZE_T HeapCompact(IN HANDLE,IN DWORD);
HANDLE GetProcessHeap(VOID);
DWORD GetProcessHeaps(IN DWORD,OUT PHANDLE);
BOOL HeapLock(IN HANDLE);
BOOL HeapUnlock(IN HANDLE);
BOOL HeapWalk(IN HANDLE,IN_OUT LPPROCESS_HEAP_ENTRY);
BOOL HeapSetInformation(IN HANDLE,IN HEAP_INFORMATION_CLASS,IN PVOID,IN SIZE_T);
BOOL HeapQueryInformation(IN HANDLE,IN HEAP_INFORMATION_CLASS,OUT PVOID*,IN SIZE_T,OUT PSIZE_T);
BOOL GetBinaryTypeA(IN LPCSTR,OUT LPDWORD);
BOOL GetBinaryTypeW(IN LPCWSTR,OUT LPDWORD);
DWORD GetShortPathNameA(IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD GetShortPathNameW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
DWORD GetLongPathNameA(IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD GetLongPathNameW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL GetProcessAffinityMask(IN HANDLE,OUT PDWORD_PTR,OUT PDWORD_PTR);
BOOL SetProcessAffinityMask(IN HANDLE,IN DWORD_PTR);
BOOL GetProcessHandleCount(IN HANDLE,OUT PDWORD);
BOOL GetProcessTimes(IN HANDLE,OUT LPFILETIME,OUT LPFILETIME,OUT LPFILETIME,OUT LPFILETIME);
BOOL GetProcessIoCounters(IN HANDLE,OUT PIO_COUNTERS);
BOOL GetProcessWorkingSetSize(IN HANDLE,OUT PSIZE_T,OUT PSIZE_T);
BOOL GetProcessWorkingSetSizeEx(IN HANDLE,OUT PSIZE_T,OUT PSIZE_T,OUT PDWORD);
BOOL SetProcessWorkingSetSize(IN HANDLE,IN SIZE_T,IN SIZE_T);
BOOL SetProcessWorkingSetSizeEx(IN HANDLE,IN SIZE_T,IN SIZE_T,IN DWORD);
HANDLE OpenProcess(IN DWORD,IN BOOL,IN DWORD);
HANDLE GetCurrentProcess(VOID);
DWORD GetCurrentProcessId(VOID);
VOID ExitProcess(IN UINT);
BOOL TerminateProcess(IN HANDLE,IN UINT);
BOOL GetExitCodeProcess(IN HANDLE,OUT LPDWORD);
VOID FatalExit(IN int);
LPCH GetEnvironmentStrings(VOID);
LPWCH GetEnvironmentStringsW(VOID);
BOOL SetEnvironmentStringsA(IN LPCH);
BOOL SetEnvironmentStringsW(IN LPWCH);
BOOL FreeEnvironmentStringsA(IN LPC);
BOOL FreeEnvironmentStringsW(IN LPWC);
VOID RaiseException(IN DWORD,IN DWORD,IN DWORD,IN CONST*);
LONG UnhandledExceptionFilter(IN struct*);
LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter(IN LPTOP_LEVEL_EXCEPTION_FILTER);
LPVOID CreateFiber(IN SIZE_T,IN LPFIBER_START_ROUTINE,IN LPVOID);
LPVOID CreateFiberEx(IN SIZE_T,IN SIZE_T,IN DWORD,IN LPFIBER_START_ROUTINE,IN LPVOID);
VOID DeleteFiber(IN LPVOID);
LPVOID ConvertThreadToFiber(IN LPVOID);
LPVOID ConvertThreadToFiberEx(IN LPVOID,IN DWORD);
BOOL ConvertFiberToThread(VOID);
VOID SwitchToFiber(IN LPVOID);
BOOL SwitchToThread(VOID);
HANDLE CreateThread(IN LPSECURITY_ATTRIBUTES,IN SIZE_T,IN LPTHREAD_START_ROUTINE,IN LPVOID,IN DWORD,OUT LPDWORD);
HANDLE CreateRemoteThread(IN HANDLE,IN LPSECURITY_ATTRIBUTES,IN SIZE_T,IN LPTHREAD_START_ROUTINE,IN LPVOID,IN DWORD,OUT LPDWORD);
HANDLE GetCurrentThread(VOID);
DWORD GetCurrentThreadId(VOID);
BOOL SetThreadStackGuarantee(IN_OUT PULONG);
DWORD GetProcessIdOfThread(IN HANDLE);
DWORD GetThreadId(IN HANDLE);
DWORD GetProcessId(IN HANDLE);
DWORD GetCurrentProcessorNumber(VOID);
DWORD_PTR SetThreadAffinityMask(IN HANDLE,IN DWORD_PTR);
DWORD SetThreadIdealProcessor(IN HANDLE,IN DWORD);
BOOL SetProcessPriorityBoost(IN HANDLE,IN BOOL);
BOOL GetProcessPriorityBoost(IN HANDLE,OUT PBOOL);
BOOL RequestWakeupLatency(IN LATENCY_TIME);
BOOL IsSystemResumeAutomatic(VOID);
HANDLE OpenThread(IN DWORD,IN BOOL,IN DWORD);
BOOL SetThreadPriority(IN HANDLE,IN int);
BOOL SetThreadPriorityBoost(IN HANDLE,IN BOOL);
BOOL GetThreadPriorityBoost(IN HANDLE,OUT PBOOL);
int GetThreadPriority(IN HANDLE);
BOOL GetThreadTimes(IN HANDLE,OUT LPFILETIME,OUT LPFILETIME,OUT LPFILETIME,OUT LPFILETIME);
BOOL GetThreadIOPendingFlag(IN HANDLE,OUT PBOOL);
VOID ExitThread(IN DWORD);
BOOL TerminateThread(IN HANDLE,IN DWORD);
BOOL GetExitCodeThread(IN HANDLE,OUT LPDWORD);
BOOL GetThreadSelectorEntry(IN HANDLE,IN DWORD,OUT LPLDT_ENTRY);
EXECUTION_STATE SetThreadExecutionState(IN EXECUTION_STATE);
DWORD GetLastError(VOID);
VOID SetLastError(IN DWORD);
VOID RestoreLastError(IN DWORD);
BOOL GetOverlappedResult(IN HANDLE,IN LPOVERLAPPED,OUT LPDWORD,IN BOOL);
HANDLE CreateIoCompletionPort(IN HANDLE,IN HANDLE,IN ULONG_PTR,IN DWORD);
BOOL GetQueuedCompletionStatus(IN HANDLE,OUT LPDWORD,OUT PULONG_PTR,OUT LPOVERLAPPED*,IN DWORD);
BOOL PostQueuedCompletionStatus(IN HANDLE,IN DWORD,IN ULONG_PTR,IN LPOVERLAPPED);
UINT SetErrorMode(IN UINT);
BOOL ReadProcessMemory(IN HANDLE,IN LPCVOID,OUT LPVOID*,IN SIZE_T,OUT SIZE_T*);
BOOL WriteProcessMemory(IN HANDLE,IN LPVOID,IN LPCVOID,IN SIZE_T,OUT SIZE_T*);
BOOL GetThreadContext(IN HANDLE,IN_OUT LPCONTEXT);
BOOL SetThreadContext(IN HANDLE,IN CONST*);
DWORD SuspendThread(IN HANDLE);
DWORD ResumeThread(IN HANDLE);
DWORD QueueUserAPC(IN PAPCFUNC,IN HANDLE,IN ULONG_PTR);
BOOL IsDebuggerPresent(VOID);
BOOL CheckRemoteDebuggerPresent(IN HANDLE,OUT PBOOL);
VOID DebugBreak(VOID);
BOOL WaitForDebugEvent(IN LPDEBUG_EVENT,IN DWORD);
BOOL ContinueDebugEvent(IN DWORD,IN DWORD,IN DWORD);
BOOL DebugActiveProcess(IN DWORD);
BOOL DebugActiveProcessStop(IN DWORD);
BOOL DebugSetProcessKillOnExit(IN BOOL);
BOOL DebugBreakProcess(IN HANDLE);
VOID InitializeCriticalSection(OUT LPCRITICAL_SECTION);
VOID EnterCriticalSection(IN_OUT LPCRITICAL_SECTION);
VOID LeaveCriticalSection(IN_OUT LPCRITICAL_SECTION);
BOOL InitializeCriticalSectionAndSpinCount(OUT LPCRITICAL_SECTION,IN DWORD);
DWORD SetCriticalSectionSpinCount(IN_OUT LPCRITICAL_SECTION,IN DWORD);
BOOL TryEnterCriticalSection(IN_OUT LPCRITICAL_SECTION);
VOID DeleteCriticalSection(IN_OUT LPCRITICAL_SECTION);
BOOL SetEvent(IN HANDLE);
BOOL ResetEvent(IN HANDLE);
BOOL PulseEvent(IN HANDLE);
BOOL ReleaseSemaphore(IN HANDLE,IN LONG,OUT LPLONG);
BOOL ReleaseMutex(IN HANDLE);
DWORD WaitForSingleObject(IN HANDLE,IN DWORD);
DWORD WaitForMultipleObjects(IN DWORD,IN CONST*,IN BOOL,IN DWORD);
VOID Sleep(IN DWORD);
HGLOBAL LoadResource(IN HMODULE,IN HRSRC);
DWORD SizeofResource(IN HMODULE,IN HRSRC);
ATOM GlobalDeleteAtom(IN ATOM);
BOOL InitAtomTable(IN DWORD);
ATOM DeleteAtom(IN ATOM);
UINT SetHandleCount(IN UINT);
DWORD GetLogicalDrives(VOID);
BOOL LockFile(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN DWORD);
BOOL UnlockFile(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN DWORD);
BOOL LockFileEx(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN_OUT LPOVERLAPPED);
BOOL UnlockFileEx(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN_OUT LPOVERLAPPED);
BOOL GetFileInformationByHandle(IN HANDLE,OUT LPBY_HANDLE_FILE_INFORMATION);
DWORD GetFileType(IN HANDLE);
DWORD GetFileSize(IN HANDLE,OUT LPDWORD);
BOOL GetFileSizeEx(IN HANDLE,OUT PLARGE_INTEGER);
HANDLE GetStdHandle(IN DWORD);
BOOL SetStdHandle(IN DWORD,IN HANDLE);
BOOL WriteFile(IN HANDLE,IN LPCVOID,IN DWORD,OUT LPDWORD,IN_OUT LPOVERLAPPED);
BOOL ReadFile(IN HANDLE,OUT LPVOID*,IN DWORD,OUT LPDWORD,IN_OUT LPOVERLAPPED);
BOOL FlushFileBuffers(IN HANDLE);
BOOL DeviceIoControl(IN HANDLE,IN DWORD,IN LPVOID,IN DWORD,OUT LPVOID*,IN DWORD,OUT LPDWORD,IN_OUT LPOVERLAPPED);
BOOL RequestDeviceWakeup(IN HANDLE);
BOOL CancelDeviceWakeupRequest(IN HANDLE);
BOOL GetDevicePowerState(IN HANDLE,OUT BOOL*);
BOOL SetMessageWaitingIndicator(IN HANDLE,IN ULONG);
BOOL SetEndOfFile(IN HANDLE);
DWORD SetFilePointer(IN HANDLE,IN LONG,IN PLONG,IN DWORD);
BOOL SetFilePointerEx(IN HANDLE,IN LARGE_INTEGER,OUT PLARGE_INTEGER,IN DWORD);
BOOL FindClose(IN_OUT HANDLE);
BOOL GetFileTime(IN HANDLE,OUT LPFILETIME,OUT LPFILETIME,OUT LPFILETIME);
BOOL SetFileTime(IN HANDLE,IN CONST*,IN CONST*,IN CONST*);
BOOL SetFileValidData(IN HANDLE,IN LONGLONG);
BOOL SetFileShortNameA(IN HANDLE,IN LPCSTR);
BOOL SetFileShortNameW(IN HANDLE,IN LPCWSTR);
BOOL CloseHandle(IN HANDLE);
BOOL DuplicateHandle(IN HANDLE,IN HANDLE,IN HANDLE,IN out,IN DWORD,IN BOOL,IN DWORD);
BOOL GetHandleInformation(IN HANDLE,OUT LPDWORD);
BOOL SetHandleInformation(IN HANDLE,IN DWORD,IN DWORD);
DWORD LoadModule(IN LPCSTR,IN LPVOID);
UINT WinExec(IN LPCSTR,IN UINT);
BOOL ClearCommBreak(IN HANDLE);
BOOL ClearCommError(IN HANDLE,OUT LPDWORD,OUT LPCOMSTAT);
BOOL SetupComm(IN HANDLE,IN DWORD,IN DWORD);
BOOL EscapeCommFunction(IN HANDLE,IN DWORD);
BOOL GetCommConfig(IN HANDLE,OUT LPCOMMCONFIG,IN_OUT LPDWORD);
BOOL GetCommMask(IN HANDLE,OUT LPDWORD);
BOOL GetCommProperties(IN HANDLE,OUT LPCOMMPROP);
BOOL GetCommModemStatus(IN HANDLE,OUT LPDWORD);
BOOL GetCommState(IN HANDLE,OUT LPDCB);
BOOL GetCommTimeouts(IN HANDLE,OUT LPCOMMTIMEOUTS);
BOOL PurgeComm(IN HANDLE,IN DWORD);
BOOL SetCommBreak(IN HANDLE);
BOOL SetCommConfig(IN HANDLE,IN LPCOMMCONFIG,IN DWORD);
BOOL SetCommMask(IN HANDLE,IN DWORD);
BOOL SetCommState(IN HANDLE,IN LPDCB);
BOOL SetCommTimeouts(IN HANDLE,IN LPCOMMTIMEOUTS);
BOOL TransmitCommChar(IN HANDLE,IN char);
BOOL WaitCommEvent(IN HANDLE,IN_OUT LPDWORD,IN_OUT LPOVERLAPPED);
DWORD SetTapePosition(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN BOOL);
DWORD GetTapePosition(IN HANDLE,IN DWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD);
DWORD PrepareTape(IN HANDLE,IN DWORD,IN BOOL);
DWORD EraseTape(IN HANDLE,IN DWORD,IN BOOL);
DWORD CreateTapePartition(IN HANDLE,IN DWORD,IN DWORD,IN DWORD);
DWORD WriteTapemark(IN HANDLE,IN DWORD,IN DWORD,IN BOOL);
DWORD GetTapeStatus(IN HANDLE);
DWORD GetTapeParameters(IN HANDLE,IN DWORD,IN_OUT LPDWORD,OUT LPVOID*);
DWORD SetTapeParameters(IN HANDLE,IN DWORD,IN LPVOID);
BOOL Beep(IN DWORD,IN DWORD);
int MulDiv(IN int,IN int,IN int);
VOID GetSystemTime(OUT LPSYSTEMTIME);
VOID GetSystemTimeAsFileTime(OUT LPFILETIME);
BOOL SetSystemTime(IN CONST*);
VOID GetLocalTime(OUT LPSYSTEMTIME);
BOOL SetLocalTime(IN CONST*);
VOID GetSystemInfo(OUT LPSYSTEM_INFO);
BOOL SetSystemFileCacheSize(IN SIZE_T,IN SIZE_T,IN DWORD);
BOOL GetSystemFileCacheSize(OUT PSIZE_T,OUT PSIZE_T,OUT PDWORD);
BOOL GetSystemRegistryQuota(OUT PDWORD,OUT PDWORD);
VOID GetNativeSystemInfo(OUT LPSYSTEM_INFO);
BOOL IsProcessorFeaturePresent(IN DWORD);
BOOL SystemTimeToTzSpecificLocalTime(IN LPTIME_ZONE_INFORMATION,IN LPSYSTEMTIME,OUT LPSYSTEMTIME);
BOOL TzSpecificLocalTimeToSystemTime(IN LPTIME_ZONE_INFORMATION,IN LPSYSTEMTIME,OUT LPSYSTEMTIME);
DWORD GetTimeZoneInformation(OUT LPTIME_ZONE_INFORMATION);
BOOL SetTimeZoneInformation(IN CONST*);
BOOL SystemTimeToFileTime(IN CONST*,OUT LPFILETIME);
BOOL FileTimeToLocalFileTime(IN CONST*,OUT LPFILETIME);
BOOL LocalFileTimeToFileTime(IN CONST*,OUT LPFILETIME);
BOOL FileTimeToSystemTime(IN CONST*,OUT LPSYSTEMTIME);
LONG CompareFileTime(IN CONST*,IN CONST*);
BOOL FileTimeToDosDateTime(IN CONST*,OUT LPWORD,OUT LPWORD);
BOOL DosDateTimeToFileTime(IN WORD,IN WORD,OUT LPFILETIME);
DWORD GetTickCount(VOID);
BOOL SetSystemTimeAdjustment(IN DWORD,IN BOOL);
BOOL GetSystemTimeAdjustment(OUT PDWORD,OUT PDWORD,OUT PBOOL);
DWORD FormatMessageA(IN DWORD,IN LPCVOID,IN DWORD,IN DWORD,IN LPSTR,IN DWORD,IN va_list*);
DWORD FormatMessageW(IN DWORD,IN LPCVOID,IN DWORD,IN DWORD,IN LPWSTR,IN DWORD,IN va_list*);
BOOL CreatePipe(OUT PHANDLE,OUT PHANDLE,IN LPSECURITY_ATTRIBUTES,IN DWORD);
BOOL ConnectNamedPipe(IN HANDLE,IN_OUT LPOVERLAPPED);
BOOL DisconnectNamedPipe(IN HANDLE);
BOOL SetNamedPipeHandleState(IN HANDLE,IN LPDWORD,IN LPDWORD,IN LPDWORD);
BOOL GetNamedPipeInfo(IN HANDLE,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD);
BOOL PeekNamedPipe(IN HANDLE,OUT LPVOID*,IN DWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD);
BOOL TransactNamedPipe(IN HANDLE,IN LPVOID,IN DWORD,OUT LPVOID*,IN DWORD,OUT LPDWORD,IN_OUT LPOVERLAPPED);
HANDLE CreateMailslotA(IN LPCSTR,IN DWORD,IN DWORD,IN LPSECURITY_ATTRIBUTES);
HANDLE CreateMailslotW(IN LPCWSTR,IN DWORD,IN DWORD,IN LPSECURITY_ATTRIBUTES);
BOOL GetMailslotInfo(IN HANDLE,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD);
BOOL SetMailslotInfo(IN HANDLE,IN DWORD);
LPVOID MapViewOfFile(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN SIZE_T);
BOOL FlushViewOfFile(IN LPCVOID,IN SIZE_T);
BOOL UnmapViewOfFile(IN LPCVOID);
HANDLE CreateToolhelp32Snapshot(IN DWORD,IN DWORD);
BOOL Process32First(IN HANDLE,IN_OUT LPPROCESSENTRY32);
BOOL Process32Next(IN HANDLE,OUT LPPROCESSENTRY32);
NTSTATUS NtWriteVirtualMemory(IN HANDLE,IN PVOID,IN PVOID,IN ULONG,OUT PULONG);
NTSTATUS ZwWriteVirtualMemory(IN HANDLE,IN PVOID,IN PVOID,IN ULONG,OUT PULONG);
NTSTATUS NtSetInformationThread(IN HANDLE,IN THREAD_INFORMATION_CLASS,IN PVOID,IN ULONG);
NTSTATUS ZwSetInformationThread(IN HANDLE,IN THREAD_INFORMATION_CLASS,IN PVOID,IN ULONG);
int lstrlen(IN LPCTSTR);
int lstrcmp(IN LPCTSTR,IN LPCTSTR);
int lstrcmpi(IN LPCTSTR,IN LPCTSTR);
int lstrcmpA(IN LPCSTR,IN LPCSTR);
int lstrcmpW(IN LPCWSTR,IN LPCWSTR);
int lstrcmpiA(IN LPCSTR,IN LPCSTR);
int lstrcmpiW(IN LPCWSTR,IN LPCWSTR);
LPSTR lstrcpynA(OUT LPSTR,IN LPCSTR,IN int);
LPWSTR lstrcpynW(OUT LPWSTR,IN LPCWSTR,IN int);
LPSTR lstrcpyA(OUT LPSTR,IN LPCSTR);
LPWSTR lstrcpyW(OUT LPWSTR,IN LPCWSTR);
LPSTR lstrcatA(IN_OUT LPSTR,IN LPCSTR);
LPWSTR lstrcatW(IN_OUT LPWSTR,IN LPCWSTR);
int lstrlenA(IN LPCSTR);
int lstrlenW(IN LPCWSTR);
HFILE OpenFile(IN LPCSTR,IN_OUT LPOFSTRUCT,IN UINT);
HFILE _lopen(IN LPCSTR,IN int);
HFILE _lcreat(IN LPCSTR,IN int);
UINT _lread(IN HFILE,OUT LPVOID,IN UINT);
UINT _lwrite(IN HFILE,IN LPCCH,IN UINT);
long _hread(IN HFILE,OUT LPVOID,IN long);
long _hwrite(IN HFILE,IN LPCCH,IN long);
HFILE _lclose(IN HFILE);
LONG _llseek(IN HFILE,IN LONG,IN int);
DWORD FlsAlloc(IN PFLS_CALLBACK_FUNCTION);
PVOID FlsGetValue(IN DWORD);
BOOL FlsSetValue(IN DWORD,IN PVOID);
BOOL FlsFree(IN DWORD);
DWORD TlsAlloc(VOID);
LPVOID TlsGetValue(IN DWORD);
BOOL TlsSetValue(IN DWORD,IN LPVOID);
BOOL TlsFree(IN DWORD);
DWORD SleepEx(IN DWORD,IN BOOL);
DWORD WaitForSingleObjectEx(IN HANDLE,IN DWORD,IN BOOL);
DWORD WaitForMultipleObjectsEx(IN DWORD,IN CONST*,IN BOOL,IN DWORD,IN BOOL);
DWORD SignalObjectAndWait(IN HANDLE,IN HANDLE,IN DWORD,IN BOOL);
BOOL ReadFileEx(IN HANDLE,OUT LPVOID,IN DWORD,IN_OUT LPOVERLAPPED,IN LPOVERLAPPED_COMPLETION_ROUTINE);
BOOL WriteFileEx(IN HANDLE,IN LPCVOID,IN DWORD,IN_OUT LPOVERLAPPED,IN LPOVERLAPPED_COMPLETION_ROUTINE);
BOOL BackupRead(IN HANDLE,OUT LPBYTE*,IN DWORD,OUT LPDWORD,IN BOOL,IN BOOL,IN_OUT LPVOID*);
BOOL BackupSeek(IN HANDLE,IN DWORD,IN DWORD,OUT LPDWORD,OUT LPDWORD,IN_OUT LPVOID*);
BOOL BackupWrite(IN HANDLE,IN LPBYTE,IN DWORD,OUT LPDWORD,IN BOOL,IN BOOL,IN_OUT LPVOID*);
BOOL ReadFileScatter(IN HANDLE,IN FILE_SEGMENT_ELEMENT,IN DWORD,IN LPDWORD,IN_OUT LPOVERLAPPED);
BOOL WriteFileGather(IN HANDLE,IN FILE_SEGMENT_ELEMENT,IN DWORD,IN LPDWORD,IN_OUT LPOVERLAPPED);
HANDLE CreateMutexA(IN LPSECURITY_ATTRIBUTES,IN BOOL,IN LPCSTR);
HANDLE CreateMutexW(IN LPSECURITY_ATTRIBUTES,IN BOOL,IN LPCWSTR);
HANDLE OpenMutexA(IN DWORD,IN BOOL,IN LPCSTR);
HANDLE OpenMutexW(IN DWORD,IN BOOL,IN LPCWSTR);
HANDLE CreateEventA(IN LPSECURITY_ATTRIBUTES,IN BOOL,IN BOOL,IN LPCSTR);
HANDLE CreateEventW(IN LPSECURITY_ATTRIBUTES,IN BOOL,IN BOOL,IN LPCWSTR);
HANDLE OpenEventA(IN DWORD,IN BOOL,IN LPCSTR);
HANDLE OpenEventW(IN DWORD,IN BOOL,IN LPCWSTR);
HANDLE CreateSemaphoreA(IN LPSECURITY_ATTRIBUTES,IN LONG,IN LONG,IN LPCSTR);
HANDLE CreateSemaphoreW(IN LPSECURITY_ATTRIBUTES,IN LONG,IN LONG,IN LPCWSTR);
HANDLE OpenSemaphoreA(IN DWORD,IN BOOL,IN LPCSTR);
HANDLE OpenSemaphoreW(IN DWORD,IN BOOL,IN LPCWSTR);
HANDLE CreateWaitableTimerA(IN LPSECURITY_ATTRIBUTES,IN BOOL,IN LPCSTR);
HANDLE CreateWaitableTimerW(IN LPSECURITY_ATTRIBUTES,IN BOOL,IN LPCWSTR);
HANDLE OpenWaitableTimerA(IN DWORD,IN BOOL,IN LPCSTR);
HANDLE OpenWaitableTimerW(IN DWORD,IN BOOL,IN LPCWSTR);
BOOL SetWaitableTimer(IN HANDLE,IN LARGE_INTEGER*,IN LONG,IN PTIMERAPCROUTINE,IN LPVOID,IN BOOL);
BOOL CancelWaitableTimer(IN HANDLE);
HANDLE CreateFileMappingA(IN HANDLE,IN LPSECURITY_ATTRIBUTES,IN DWORD,IN DWORD,IN DWORD,IN LPCSTR);
HANDLE CreateFileMappingW(IN HANDLE,IN LPSECURITY_ATTRIBUTES,IN DWORD,IN DWORD,IN DWORD,IN LPCWSTR);
HANDLE OpenFileMappingA(IN DWORD,IN BOOL,IN LPCSTR);
HANDLE OpenFileMappingW(IN DWORD,IN BOOL,IN LPCWSTR);
DWORD GetLogicalDriveStringsA(IN DWORD,OUT LPSTR);
DWORD GetLogicalDriveStringsW(IN DWORD,OUT LPWSTR);
HANDLE CreateMemoryResourceNotification(IN MEMORY_RESOURCE_NOTIFICATION_TYPE);
BOOL QueryMemoryResourceNotification(IN HANDLE,OUT PBOOL);
HMODULE LoadLibraryA(IN LPCSTR);
HMODULE LoadLibraryW(IN LPCWSTR);
HMODULE LoadLibraryExA(IN LPCSTR,IN HANDLE,IN DWORD);
HMODULE LoadLibraryExW(IN LPCWSTR,IN HANDLE,IN DWORD);
DWORD GetModuleFileNameA(IN HMODULE,OUT LPCH,IN DWORD);
DWORD GetModuleFileNameW(IN HMODULE,OUT LPWCH,IN DWORD);
HMODULE GetModuleHandleA(IN LPCSTR);
HMODULE GetModuleHandleW(IN LPCWSTR);
BOOL GetModuleHandleExA(IN DWORD,IN LPCSTR,OUT HMODULE**);
BOOL GetModuleHandleExW(IN DWORD,IN LPCWSTR,OUT HMODULE**);
BOOL NeedCurrentDirectoryForExePathA(IN LPCSTR);
BOOL NeedCurrentDirectoryForExePathW(IN LPCWSTR);
BOOL CreateProcessA(IN LPCSTR,IN_OUT LPSTR,IN LPSECURITY_ATTRIBUTES,IN LPSECURITY_ATTRIBUTES,IN BOOL,IN DWORD,IN LPVOID,IN LPCSTR,IN LPSTARTUPINFOA,OUT LPPROCESS_INFORMATION);
BOOL CreateProcessW(IN LPCWSTR,IN_OUT LPWSTR,IN LPSECURITY_ATTRIBUTES,IN LPSECURITY_ATTRIBUTES,IN BOOL,IN DWORD,IN LPVOID,IN LPCWSTR,IN LPSTARTUPINFOW,OUT LPPROCESS_INFORMATION);
BOOL SetProcessShutdownParameters(IN DWORD,IN DWORD);
BOOL GetProcessShutdownParameters(OUT LPDWORD,OUT LPDWORD);
DWORD GetProcessVersion(IN DWORD);
VOID FatalAppExitA(IN UINT,IN LPCSTR);
VOID FatalAppExitW(IN UINT,IN LPCWSTR);
VOID GetStartupInfoA(OUT LPSTARTUPINFOA);
VOID GetStartupInfoW(OUT LPSTARTUPINFOW);
LPSTR GetCommandLineA(VOID);
LPWSTR GetCommandLineW(VOID);
DWORD GetEnvironmentVariableA(IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD GetEnvironmentVariableW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL SetEnvironmentVariableA(IN LPCSTR,IN LPCSTR);
BOOL SetEnvironmentVariableW(IN LPCWSTR,IN LPCWSTR);
DWORD ExpandEnvironmentStringsA(IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD ExpandEnvironmentStringsW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
DWORD GetFirmwareEnvironmentVariableA(IN LPCSTR,IN LPCSTR,OUT PVOID,IN DWORD);
DWORD GetFirmwareEnvironmentVariableW(IN LPCWSTR,IN LPCWSTR,OUT PVOID,IN DWORD);
BOOL SetFirmwareEnvironmentVariableA(IN LPCSTR,IN LPCSTR,IN PVOID,IN DWORD);
BOOL SetFirmwareEnvironmentVariableW(IN LPCWSTR,IN LPCWSTR,IN PVOID,IN DWORD);
VOID OutputDebugStringA(IN LPCSTR);
VOID OutputDebugStringW(IN LPCWSTR);
HRSRC FindResourceA(IN HMODULE,IN LPCSTR,IN LPCSTR);
HRSRC FindResourceW(IN HMODULE,IN LPCWSTR,IN LPCWSTR);
HRSRC FindResourceExA(IN HMODULE,IN LPCSTR,IN LPCSTR,IN WORD);
HRSRC FindResourceExW(IN HMODULE,IN LPCWSTR,IN LPCWSTR,IN WORD);
BOOL EnumResourceTypesA(IN HMODULE,IN ENUMRESTYPEPROCA,IN LONG_PTR);
BOOL EnumResourceTypesW(IN HMODULE,IN ENUMRESTYPEPROCW,IN LONG_PTR);
BOOL EnumResourceNamesA(IN HMODULE,IN LPCSTR,IN ENUMRESNAMEPROCA,IN LONG_PTR);
BOOL EnumResourceNamesW(IN HMODULE,IN LPCWSTR,IN ENUMRESNAMEPROCW,IN LONG_PTR);
BOOL EnumResourceLanguagesA(IN HMODULE,IN LPCSTR,IN LPCSTR,IN ENUMRESLANGPROCA,IN LONG_PTR);
BOOL EnumResourceLanguagesW(IN HMODULE,IN LPCWSTR,IN LPCWSTR,IN ENUMRESLANGPROCW,IN LONG_PTR);
HANDLE BeginUpdateResourceA(IN LPCSTR,IN BOOL);
HANDLE BeginUpdateResourceW(IN LPCWSTR,IN BOOL);
BOOL UpdateResourceA(IN HANDLE,IN LPCSTR,IN LPCSTR,IN WORD,IN LPVOID,IN DWORD);
BOOL UpdateResourceW(IN HANDLE,IN LPCWSTR,IN LPCWSTR,IN WORD,IN LPVOID,IN DWORD);
BOOL EndUpdateResourceA(IN HANDLE,IN BOOL);
BOOL EndUpdateResourceW(IN HANDLE,IN BOOL);
ATOM GlobalAddAtomA(IN LPCSTR);
ATOM GlobalAddAtomW(IN LPCWSTR);
ATOM GlobalFindAtomA(IN LPCSTR);
ATOM GlobalFindAtomW(IN LPCWSTR);
UINT GlobalGetAtomNameA(IN ATOM,OUT LPSTR,IN int);
UINT GlobalGetAtomNameW(IN ATOM,OUT LPWSTR,IN int);
ATOM AddAtomA(IN LPCSTR);
ATOM AddAtomW(IN LPCWSTR);
ATOM FindAtomA(IN LPCSTR);
ATOM FindAtomW(IN LPCWSTR);
UINT GetAtomNameA(IN ATOM,OUT LPSTR,IN int);
UINT GetAtomNameW(IN ATOM,OUT LPWSTR,IN int);
UINT GetProfileIntA(IN LPCSTR,IN LPCSTR,IN INT);
UINT GetProfileIntW(IN LPCWSTR,IN LPCWSTR,IN INT);
DWORD GetProfileStringA(IN LPCSTR,IN LPCSTR,IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD GetProfileStringW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL WriteProfileStringA(IN LPCSTR,IN LPCSTR,IN LPCSTR);
BOOL WriteProfileStringW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR);
DWORD GetProfileSectionA(IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD GetProfileSectionW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL WriteProfileSectionA(IN LPCSTR,IN LPCSTR);
BOOL WriteProfileSectionW(IN LPCWSTR,IN LPCWSTR);
UINT GetPrivateProfileIntA(IN LPCSTR,IN LPCSTR,IN INT,IN LPCSTR);
UINT GetPrivateProfileIntW(IN LPCWSTR,IN LPCWSTR,IN INT,IN LPCWSTR);
DWORD GetPrivateProfileStringA(IN LPCSTR,IN LPCSTR,IN LPCSTR,OUT LPSTR,IN DWORD,IN LPCSTR);
DWORD GetPrivateProfileStringW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,OUT LPWSTR,IN DWORD,IN LPCWSTR);
BOOL WritePrivateProfileStringA(IN LPCSTR,IN LPCSTR,IN LPCSTR,IN LPCSTR);
BOOL WritePrivateProfileStringW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,IN LPCWSTR);
DWORD GetPrivateProfileSectionA(IN LPCSTR,OUT LPSTR,IN DWORD,IN LPCSTR);
DWORD GetPrivateProfileSectionW(IN LPCWSTR,OUT LPWSTR,IN DWORD,IN LPCWSTR);
BOOL WritePrivateProfileSectionA(IN LPCSTR,IN LPCSTR,IN LPCSTR);
BOOL WritePrivateProfileSectionW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR);
DWORD GetPrivateProfileSectionNamesA(OUT LPSTR,IN DWORD,IN LPCSTR);
DWORD GetPrivateProfileSectionNamesW(OUT LPWSTR,IN DWORD,IN LPCWSTR);
BOOL GetPrivateProfileStructA(IN LPCSTR,IN LPCSTR,OUT LPVOID,IN UINT,IN LPCSTR);
BOOL GetPrivateProfileStructW(IN LPCWSTR,IN LPCWSTR,OUT LPVOID,IN UINT,IN LPCWSTR);
BOOL WritePrivateProfileStructA(IN LPCSTR,IN LPCSTR,IN LPVOID,IN UINT,IN LPCSTR);
BOOL WritePrivateProfileStructW(IN LPCWSTR,IN LPCWSTR,IN LPVOID,IN UINT,IN LPCWSTR);
UINT GetDriveTypeA(IN LPCSTR);
UINT GetDriveTypeW(IN LPCWSTR);
UINT GetSystemDirectoryA(OUT LPSTR,IN UINT);
UINT GetSystemDirectoryW(OUT LPWSTR,IN UINT);
DWORD GetTempPathA(IN DWORD,OUT LPSTR);
DWORD GetTempPathW(IN DWORD,OUT LPWSTR);
UINT GetTempFileNameA(IN LPCSTR,IN LPCSTR,IN UINT,OUT LPSTR);
UINT GetTempFileNameW(IN LPCWSTR,IN LPCWSTR,IN UINT,OUT LPWSTR);
UINT GetWindowsDirectoryA(OUT LPSTR,IN UINT);
UINT GetWindowsDirectoryW(OUT LPWSTR,IN UINT);
UINT GetSystemWindowsDirectoryA(OUT LPSTR,IN UINT);
UINT GetSystemWindowsDirectoryW(OUT LPWSTR,IN UINT);
UINT GetSystemWow64DirectoryA(OUT LPSTR,IN UINT);
UINT GetSystemWow64DirectoryW(OUT LPWSTR,IN UINT);
BOOLEAN Wow64EnableWow64FsRedirection(IN BOOLEAN);
BOOL Wow64DisableWow64FsRedirection(OUT PVOID*);
BOOL Wow64RevertWow64FsRedirection(IN PVOID);
BOOL SetCurrentDirectoryA(IN LPCSTR);
BOOL SetCurrentDirectoryW(IN LPCWSTR);
DWORD GetCurrentDirectoryA(IN DWORD,OUT LPSTR);
DWORD GetCurrentDirectoryW(IN DWORD,OUT LPWSTR);
BOOL SetDllDirectoryA(IN LPCSTR);
BOOL SetDllDirectoryW(IN LPCWSTR);
DWORD GetDllDirectoryA(IN DWORD,OUT LPSTR);
DWORD GetDllDirectoryW(IN DWORD,OUT LPWSTR);
BOOL GetDiskFreeSpaceA(IN LPCSTR,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD);
BOOL GetDiskFreeSpaceW(IN LPCWSTR,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD);
BOOL GetDiskFreeSpaceExA(IN LPCSTR,OUT PULARGE_INTEGER,OUT PULARGE_INTEGER,OUT PULARGE_INTEGER);
BOOL GetDiskFreeSpaceExW(IN LPCWSTR,OUT PULARGE_INTEGER,OUT PULARGE_INTEGER,OUT PULARGE_INTEGER);
BOOL CreateDirectoryA(IN LPCSTR,IN LPSECURITY_ATTRIBUTES);
BOOL CreateDirectoryW(IN LPCWSTR,IN LPSECURITY_ATTRIBUTES);
BOOL CreateDirectoryExA(IN LPCSTR,IN LPCSTR,IN LPSECURITY_ATTRIBUTES);
BOOL CreateDirectoryExW(IN LPCWSTR,IN LPCWSTR,IN LPSECURITY_ATTRIBUTES);
BOOL RemoveDirectoryA(IN LPCSTR);
BOOL RemoveDirectoryW(IN LPCWSTR);
DWORD GetFullPathNameA(IN LPCSTR,IN DWORD,OUT LPSTR,IN LPSTR*);
DWORD GetFullPathNameW(IN LPCWSTR,IN DWORD,OUT LPWSTR,IN LPWSTR*);
BOOL DefineDosDeviceA(IN DWORD,IN LPCSTR,IN LPCSTR);
BOOL DefineDosDeviceW(IN DWORD,IN LPCWSTR,IN LPCWSTR);
DWORD QueryDosDeviceA(IN LPCSTR,OUT LPSTR,IN DWORD);
DWORD QueryDosDeviceW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
HANDLE CreateFileA(IN LPCSTR,IN DWORD,IN DWORD,IN LPSECURITY_ATTRIBUTES,IN DWORD,IN DWORD,IN HANDLE);
HANDLE CreateFileW(IN LPCWSTR,IN DWORD,IN DWORD,IN LPSECURITY_ATTRIBUTES,IN DWORD,IN DWORD,IN HANDLE);
HANDLE ReOpenFile(IN HANDLE,IN DWORD,IN DWORD,IN DWORD);
BOOL SetFileAttributesA(IN LPCSTR,IN DWORD);
BOOL SetFileAttributesW(IN LPCWSTR,IN DWORD);
DWORD GetFileAttributesA(IN LPCSTR);
DWORD GetFileAttributesW(IN LPCWSTR);
BOOL GetFileAttributesExA(IN LPCSTR,IN GET_FILEEX_INFO_LEVELS,OUT LPVOID);
BOOL GetFileAttributesExW(IN LPCWSTR,IN GET_FILEEX_INFO_LEVELS,OUT LPVOID);
DWORD GetCompressedFileSizeA(IN LPCSTR,OUT LPDWORD);
DWORD GetCompressedFileSizeW(IN LPCWSTR,OUT LPDWORD);
BOOL DeleteFileA(IN LPCSTR);
BOOL DeleteFileW(IN LPCWSTR);
BOOL CheckNameLegalDOS8Dot3A(IN LPCSTR,OUT LPSTR,IN DWORD,OUT PBOOL,OUT PBOOL);
BOOL CheckNameLegalDOS8Dot3W(IN LPCWSTR,OUT LPSTR,IN DWORD,OUT PBOOL,OUT PBOOL);
HANDLE FindFirstFileExA(IN LPCSTR,IN FINDEX_INFO_LEVELS,OUT LPVOID,IN FINDEX_SEARCH_OPS,IN LPVOID,IN DWORD);
HANDLE FindFirstFileExW(IN LPCWSTR,IN FINDEX_INFO_LEVELS,OUT LPVOID,IN FINDEX_SEARCH_OPS,IN LPVOID,IN DWORD);
HANDLE FindFirstFileA(IN LPCSTR,OUT LPWIN32_FIND_DATAA);
HANDLE FindFirstFileW(IN LPCWSTR,OUT LPWIN32_FIND_DATAW);
BOOL FindNextFileA(IN HANDLE,OUT LPWIN32_FIND_DATAA);
BOOL FindNextFileW(IN HANDLE,OUT LPWIN32_FIND_DATAW);
DWORD SearchPathA(IN LPCSTR,IN LPCSTR,IN LPCSTR,IN DWORD,OUT LPSTR,OUT LPSTR*);
DWORD SearchPathW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,IN DWORD,OUT LPWSTR,OUT LPWSTR*);
BOOL CopyFileA(IN LPCSTR,IN LPCSTR,IN BOOL);
BOOL CopyFileW(IN LPCWSTR,IN LPCWSTR,IN BOOL);
BOOL CopyFileExA(IN LPCSTR,IN LPCSTR,IN LPPROGRESS_ROUTINE,IN LPVOID,IN LPBOOL,IN DWORD);
BOOL CopyFileExW(IN LPCWSTR,IN LPCWSTR,IN LPPROGRESS_ROUTINE,IN LPVOID,IN LPBOOL,IN DWORD);
BOOL MoveFileA(IN LPCSTR,IN LPCSTR);
BOOL MoveFileW(IN LPCWSTR,IN LPCWSTR);
BOOL MoveFileExA(IN LPCSTR,IN LPCSTR,IN DWORD);
BOOL MoveFileExW(IN LPCWSTR,IN LPCWSTR,IN DWORD);
BOOL MoveFileWithProgressA(IN LPCSTR,IN LPCSTR,IN LPPROGRESS_ROUTINE,IN LPVOID,IN DWORD);
BOOL MoveFileWithProgressW(IN LPCWSTR,IN LPCWSTR,IN LPPROGRESS_ROUTINE,IN LPVOID,IN DWORD);
BOOL ReplaceFileA(IN LPCSTR,IN LPCSTR,IN LPCSTR,IN DWORD,IN LPVOID,IN LPVOID);
BOOL ReplaceFileW(IN LPCWSTR,IN LPCWSTR,IN LPCWSTR,IN DWORD,IN LPVOID,IN LPVOID);
BOOL CreateHardLinkA(IN LPCSTR,IN LPCSTR,IN LPSECURITY_ATTRIBUTES);
BOOL CreateHardLinkW(IN LPCWSTR,IN LPCWSTR,IN LPSECURITY_ATTRIBUTES);
HANDLE CreateNamedPipeA(IN LPCSTR,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN LPSECURITY_ATTRIBUTES);
HANDLE CreateNamedPipeW(IN LPCWSTR,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN DWORD,IN LPSECURITY_ATTRIBUTES);
BOOL GetNamedPipeHandleStateA(IN HANDLE,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPSTR,IN DWORD);
BOOL GetNamedPipeHandleStateW(IN HANDLE,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPWSTR,IN DWORD);
BOOL CallNamedPipeA(IN LPCSTR,IN LPVOID,IN DWORD,OUT LPVOID*,IN DWORD,OUT LPDWORD,IN DWORD);
BOOL CallNamedPipeW(IN LPCWSTR,IN LPVOID,IN DWORD,OUT LPVOID*,IN DWORD,OUT LPDWORD,IN DWORD);
BOOL WaitNamedPipeA(IN LPCSTR,IN DWORD);
BOOL WaitNamedPipeW(IN LPCWSTR,IN DWORD);
BOOL SetVolumeLabelA(IN LPCSTR,IN LPCSTR);
BOOL SetVolumeLabelW(IN LPCWSTR,IN LPCWSTR);
VOID SetFileApisToOEM(VOID);
VOID SetFileApisToANSI(VOID);
BOOL AreFileApisANSI(VOID);
BOOL GetVolumeInformationA(IN LPCSTR,OUT LPSTR,IN DWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPSTR,IN DWORD);
BOOL GetVolumeInformationW(IN LPCWSTR,OUT LPWSTR,IN DWORD,OUT LPDWORD,OUT LPDWORD,OUT LPDWORD,OUT LPWSTR,IN DWORD);
BOOL CancelIo(IN HANDLE);
HANDLE FindFirstChangeNotificationA(IN LPCSTR,IN BOOL,IN DWORD);
HANDLE FindFirstChangeNotificationW(IN LPCWSTR,IN BOOL,IN DWORD);
BOOL FindNextChangeNotification(IN HANDLE);
BOOL FindCloseChangeNotification(IN HANDLE);
BOOL ReadDirectoryChangesW(IN HANDLE,OUT LPVOID*,IN DWORD,IN BOOL,IN DWORD,OUT LPDWORD,IN_OUT LPOVERLAPPED,IN LPOVERLAPPED_COMPLETION_ROUTINE);
BOOL VirtualLock(IN LPVOID,IN SIZE_T);
BOOL VirtualUnlock(IN LPVOID,IN SIZE_T);
LPVOID MapViewOfFileEx(IN HANDLE,IN DWORD,IN DWORD,IN DWORD,IN SIZE_T,IN LPVOID);
BOOL SetPriorityClass(IN HANDLE,IN DWORD);
DWORD GetPriorityClass(IN HANDLE);
BOOL IsBadReadPtr(IN CONST*,IN UINT_PTR);
BOOL IsBadWritePtr(IN LPVOID,IN UINT_PTR);
BOOL IsBadHugeReadPtr(IN CONST*,IN UINT_PTR);
BOOL IsBadHugeWritePtr(IN LPVOID,IN UINT_PTR);
BOOL IsBadCodePtr(IN FARPROC);
BOOL IsBadStringPtrA(IN LPCSTR,IN UINT_PTR);
BOOL IsBadStringPtrW(IN LPCWSTR,IN UINT_PTR);
BOOL BuildCommDCBA(IN LPCSTR,OUT LPDCB);
BOOL BuildCommDCBW(IN LPCWSTR,OUT LPDCB);
BOOL BuildCommDCBAndTimeoutsA(IN LPCSTR,OUT LPDCB,OUT LPCOMMTIMEOUTS);
BOOL BuildCommDCBAndTimeoutsW(IN LPCWSTR,OUT LPDCB,OUT LPCOMMTIMEOUTS);
BOOL CommConfigDialogA(IN LPCSTR,IN HWND,IN_OUT LPCOMMCONFIG);
BOOL CommConfigDialogW(IN LPCWSTR,IN HWND,IN_OUT LPCOMMCONFIG);
BOOL GetDefaultCommConfigA(IN LPCSTR,OUT LPCOMMCONFIG*,IN_OUT LPDWORD);
BOOL GetDefaultCommConfigW(IN LPCWSTR,OUT LPCOMMCONFIG*,IN_OUT LPDWORD);
BOOL SetDefaultCommConfigA(IN LPCSTR,IN LPCOMMCONFIG,IN DWORD);
BOOL SetDefaultCommConfigW(IN LPCWSTR,IN LPCOMMCONFIG,IN DWORD);
BOOL GetComputerNameA(OUT LPSTR*,IN_OUT LPDWORD);
BOOL GetComputerNameW(OUT LPWSTR*,IN_OUT LPDWORD);
BOOL SetComputerNameA(IN LPCSTR);
BOOL SetComputerNameW(IN LPCWSTR);
BOOL GetComputerNameExA(IN COMPUTER_NAME_FORMAT,OUT LPSTR*,IN_OUT LPDWORD);
BOOL GetComputerNameExW(IN COMPUTER_NAME_FORMAT,OUT LPWSTR*,IN_OUT LPDWORD);
BOOL SetComputerNameExA(IN COMPUTER_NAME_FORMAT,IN LPCSTR);
BOOL SetComputerNameExW(IN COMPUTER_NAME_FORMAT,IN LPCWSTR);
BOOL DnsHostnameToComputerNameA(IN LPCSTR,OUT LPSTR*,IN_OUT LPDWORD);
BOOL DnsHostnameToComputerNameW(IN LPCWSTR,OUT LPWSTR*,IN_OUT LPDWORD);
BOOL RegisterWaitForSingleObject(IN out,IN HANDLE,IN WAITORTIMERCALLBACK,IN PVOID,IN ULONG,IN ULONG);
HANDLE RegisterWaitForSingleObjectEx(IN HANDLE,IN WAITORTIMERCALLBACK,IN PVOID,IN ULONG,IN ULONG);
BOOL UnregisterWait(IN HANDLE);
BOOL UnregisterWaitEx(IN HANDLE,IN HANDLE);
BOOL QueueUserWorkItem(IN LPTHREAD_START_ROUTINE,IN PVOID,IN ULONG);
BOOL BindIoCompletionCallback(IN HANDLE,IN LPOVERLAPPED_COMPLETION_ROUTINE,IN ULONG);
HANDLE CreateTimerQueue(VOID);
BOOL CreateTimerQueueTimer(IN out,IN HANDLE,IN WAITORTIMERCALLBACK,IN PVOID,IN DWORD,IN DWORD,IN ULONG);
BOOL ChangeTimerQueueTimer(IN HANDLE,IN_OUT HANDLE,IN ULONG,IN ULONG);
BOOL DeleteTimerQueueTimer(IN HANDLE,IN HANDLE,IN HANDLE);
BOOL DeleteTimerQueueEx(IN HANDLE,IN HANDLE);
HANDLE SetTimerQueueTimer(IN HANDLE,IN WAITORTIMERCALLBACK,IN PVOID,IN DWORD,IN DWORD,IN BOOL);
BOOL CancelTimerQueueTimer(IN HANDLE,IN HANDLE);
BOOL DeleteTimerQueue(IN HANDLE);
BOOL QueryPerformanceCounter(OUT LARGE_INTEGER*);
BOOL QueryPerformanceFrequency(OUT LARGE_INTEGER*);
BOOL GetVersionExA(IN_OUT LPOSVERSIONINFOA);
BOOL GetVersionExW(IN_OUT LPOSVERSIONINFOW);
BOOL VerifyVersionInfoA(IN_OUT LPOSVERSIONINFOEXA,IN DWORD,IN DWORDLONG);
BOOL VerifyVersionInfoW(IN_OUT LPOSVERSIONINFOEXW,IN DWORD,IN DWORDLONG);
BOOL AllocateUserPhysicalPages(IN HANDLE,IN_OUT PULONG_PTR,OUT PULONG_PTR*);
BOOL FreeUserPhysicalPages(IN HANDLE,IN_OUT PULONG_PTR,IN PULONG_PTR*);
BOOL MapUserPhysicalPages(IN PVOID,IN ULONG_PTR,IN PULONG_PTR);
BOOL MapUserPhysicalPagesScatter(IN PVOID*,IN ULONG_PTR,IN PULONG_PTR);
HANDLE CreateJobObjectA(IN LPSECURITY_ATTRIBUTES,IN LPCSTR);
HANDLE CreateJobObjectW(IN LPSECURITY_ATTRIBUTES,IN LPCWSTR);
HANDLE OpenJobObjectA(IN DWORD,IN BOOL,IN LPCSTR);
HANDLE OpenJobObjectW(IN DWORD,IN BOOL,IN LPCWSTR);
BOOL AssignProcessToJobObject(IN HANDLE,IN HANDLE);
BOOL TerminateJobObject(IN HANDLE,IN UINT);
BOOL QueryInformationJobObject(IN HANDLE,IN JOBOBJECTINFOCLASS,OUT LPVOID*,IN DWORD,OUT LPDWORD);
BOOL SetInformationJobObject(IN HANDLE,IN JOBOBJECTINFOCLASS,IN LPVOID,IN DWORD);
BOOL IsProcessInJob(IN HANDLE,IN HANDLE,OUT PBOOL);
BOOL CreateJobSet(IN ULONG,IN PJOB_SET_ARRAY);
PVOID AddVectoredExceptionHandler(IN ULONG,IN PVECTORED_EXCEPTION_HANDLER);
ULONG RemoveVectoredExceptionHandler(IN PVOID);
PVOID AddVectoredContinueHandler(IN ULONG,IN PVECTORED_EXCEPTION_HANDLER);
ULONG RemoveVectoredContinueHandler(IN PVOID);
HANDLE FindFirstVolumeA(OUT LPSTR,IN DWORD);
HANDLE FindFirstVolumeW(OUT LPWSTR,IN DWORD);
BOOL FindNextVolumeA(IN_OUT HANDLE,OUT LPSTR,IN DWORD);
BOOL FindNextVolumeW(IN_OUT HANDLE,OUT LPWSTR,IN DWORD);
BOOL FindVolumeClose(IN HANDLE);
HANDLE FindFirstVolumeMountPointA(IN LPCSTR,OUT LPSTR,IN DWORD);
HANDLE FindFirstVolumeMountPointW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL FindNextVolumeMountPointA(IN HANDLE,OUT LPSTR,IN DWORD);
BOOL FindNextVolumeMountPointW(IN HANDLE,OUT LPWSTR,IN DWORD);
BOOL FindVolumeMountPointClose(IN HANDLE);
BOOL SetVolumeMountPointA(IN LPCSTR,IN LPCSTR);
BOOL SetVolumeMountPointW(IN LPCWSTR,IN LPCWSTR);
BOOL DeleteVolumeMountPointA(IN LPCSTR);
BOOL DeleteVolumeMountPointW(IN LPCWSTR);
BOOL GetVolumeNameForVolumeMountPointA(IN LPCSTR,OUT LPSTR,IN DWORD);
BOOL GetVolumeNameForVolumeMountPointW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL GetVolumePathNameA(IN LPCSTR,OUT LPSTR,IN DWORD);
BOOL GetVolumePathNameW(IN LPCWSTR,OUT LPWSTR,IN DWORD);
BOOL GetVolumePathNamesForVolumeNameA(IN LPCSTR,IN LPCH*,IN DWORD,OUT PDWORD);
BOOL GetVolumePathNamesForVolumeNameW(IN LPCWSTR,IN LPWCH*,IN DWORD,OUT PDWORD);
HANDLE CreateActCtxA(IN PCACTCTXA);
HANDLE CreateActCtxW(IN PCACTCTXW);
VOID AddRefActCtx(IN_OUT HANDLE);
VOID ReleaseActCtx(IN_OUT HANDLE);
BOOL ZombifyActCtx(IN_OUT HANDLE);
BOOL ActivateActCtx(IN_OUT HANDLE,OUT ULONG_PTR*);
BOOL DeactivateActCtx(IN DWORD,IN ULONG_PTR);
BOOL FindActCtxSectionStringA(IN DWORD,IN GUID*,IN ULONG,IN LPCSTR,OUT PACTCTX_SECTION_KEYED_DATA);
BOOL FindActCtxSectionStringW(IN DWORD,IN GUID*,IN ULONG,IN LPCWSTR,OUT PACTCTX_SECTION_KEYED_DATA);
BOOL FindActCtxSectionGuid(IN DWORD,IN GUID*,IN ULONG,IN GUID*,OUT PACTCTX_SECTION_KEYED_DATA);
BOOL QueryActCtxW(IN DWORD,IN HANDLE,IN PVOID,IN ULONG,OUT PVOID*,IN SIZE_T,OUT SIZE_T*);
BOOL ProcessIdToSessionId(IN DWORD,OUT DWORD*);
DWORD WTSGetActiveConsoleSessionId();
BOOL IsWow64Process(IN HANDLE,OUT PBOOL);
BOOL GetLogicalProcessorInformation(OUT PSYSTEM_LOGICAL_PROCESSOR_INFORMATION*,IN_OUT PDWORD);
BOOL GetNumaHighestNodeNumber(OUT PULONG);
BOOL GetNumaProcessorNode(IN UCHAR,OUT PUCHAR);
BOOL GetNumaNodeProcessorMask(IN UCHAR,OUT PULONGLONG);
BOOL GetNumaAvailableMemoryNode(IN UCHAR,OUT PULONGLONG);

# ---------------------------------------------------------------------
# LIBC APIs
# ---------------------------------------------------------------------

VOID* memcpy(IN VOID*,IN VOID*, IN SIZE_T);
WCHAR_T* wcschr(IN WCHAR_T*,IN WCHAR_T);
SIZE_T wcslen(IN WCHAR_T*);
TIME_T time(OUT TIME_T*);
VOID* calloc(IN SIZE_T,IN SIZE_T);
VOID free(IN VOID*);
VOID* malloc(IN SIZE_T);
VOID srand(IN INT);
FILE* __p__iob(VOID);
FILE* __iob_func(VOID);
INT _filbuf(IN_OUT FILE*);
INT _flsbuf(IN INT,IN_OUT FILE*);
FILE* _fsopen(IN CHAR*,IN CHAR*,IN INT);
VOID clearerr(IN_OUT FILE*);
ERRNO_T clearerr_s(IN_OUT FILE*);
INT fclose(IN_OUT FILE*);
INT _fcloseall(VOID);
FILE* _fdopen(IN INT,IN CHAR*);
INT feof(IN FILE*);
INT ferror(IN FILE*);
INT fflush(IN_OUT FILE*);
INT fgetc(IN_OUT FILE*);
INT _fgetchar(VOID);
INT fgetpos(IN_OUT FILE* ,OUT FPOS_T*);
CHAR* fgets(CHAR*,IN INT,IN_OUT FILE*);
INT _fileno(IN FILE*);
CHAR* _tempnam(IN CHAR*,IN CHAR*);
INT _flushall(VOID);
FILE* fopen(IN CHAR*,IN CHAR*);
ERRNO_T fopen_s(OUT FILE**,IN CHAR*,IN CHAR*);
INT fprintf(IN_OUT FILE*,IN CHAR*,...);
INT fprintf_s(IN_OUT FILE*,IN CHAR*,...);
INT fputc(IN INT,IN_OUT FILE*);
INT _fputchar(IN INT);
INT fputs(IN CHAR*,IN_OUT FILE*);
SIZE_T fread(VOID*,IN SIZE_T,IN SIZE_T,IN_OUT FILE*);
SIZE_T fread_s(VOID*,IN SIZE_T,IN SIZE_T,IN SIZE_T,IN_OUT FILE*);
FILE* freopen(IN CHAR*,IN CHAR*,IN_OUT FILE*);
ERRNO_T freopen_s(OUT FILE**,IN CHAR*,IN CHAR*,IN_OUT FILE*);
INT fscanf(IN_OUT FILE*,IN CHAR*,...);
INT _fscanf_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,...);
INT fscanf_s(IN_OUT FILE*,IN CHAR*,...);
INT _fscanf_s_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,...);
INT fsetpos(IN_OUT FILE*,IN FPOS_T*);
INT fseek(IN_OUT FILE*,IN LONG,IN INT);
LONG ftell(IN_OUT FILE*);
INT _fseeki64(IN_OUT FILE*,IN __INT64,IN INT);
__INT64 _ftelli64(IN_OUT FILE*);
SIZE_T fwrite(IN VOID*,IN SIZE_T,IN SIZE_T,IN_OUT FILE*);
INT getc(IN_OUT FILE*);
INT getchar(VOID);
INT _getmaxstdio(VOID);
CHAR* gets_s(CHAR*,IN RSIZE_T);
INT _getw(IN_OUT FILE*);
VOID perror(IN CHAR*);
INT _pclose(IN_OUT FILE*);
FILE* _popen(IN CHAR*,IN CHAR*);
INT printf(IN CHAR*,...);
INT printf_s(IN CHAR*,...);
INT putc(IN INT,IN_OUT FILE*);
INT putchar(IN INT);
INT puts(IN CHAR*);
INT _putw(IN INT,IN_OUT FILE*);
INT remove(IN CHAR*);
INT _unlink(IN CHAR*);
INT unlink(IN CHAR*);
VOID rewind(IN_OUT FILE*);
INT _rmtmp(VOID);
INT scanf(IN CHAR*,...);
INT _scanf_l(IN CHAR*,IN _LOCALE_T,...);
INT scanf_s(IN CHAR*,...);
INT _scanf_s_l(IN CHAR*,IN _LOCALE_T,...);
VOID setbuf(IN_OUT FILE*,IN_OUT CHAR*);
INT _setmaxstdio(IN INT);
INT _set_output_format(IN UNSIGNED INT);
INT _get_output_format(VOID);
INT setvbuf(IN_OUT FILE*,IN_OUT CHAR*,IN INT,IN SIZE_T);
INT _snprintf_s(OUT CHAR*,IN SIZE_T,IN SIZE_T,IN CHAR*,...);
INT sprintf_s(OUT CHAR*,IN SIZE_T,IN CHAR*,...);
INT _scprintf(IN CHAR*,...);
INT sscanf(IN CHAR*,IN CHAR*,...);
INT _sscanf_l(IN CHAR*,IN CHAR*,IN _LOCALE_T,...);
INT sscanf_s(IN CHAR*,IN CHAR*,...);
INT _sscanf_s_l(IN CHAR*,IN CHAR*,IN _LOCALE_T,...);
INT _snscanf(IN CHAR*,IN SIZE_T,IN CHAR*,...);
INT _snscanf_l(IN CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
INT _snscanf_s(IN CHAR*,IN SIZE_T,IN CHAR*,...);
INT _snscanf_s_l(IN CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
FILE* tmpfile(VOID);
ERRNO_T tmpfile_s(OUT FILE**);
ERRNO_T tmpnam_s(CHAR*,IN RSIZE_T);
INT ungetc(IN INT,IN_OUT FILE*);
INT vfprintf(IN_OUT FILE*,IN CHAR*,IN VA_LIST);
INT vfprintf_s(IN_OUT FILE*,IN CHAR*,IN VA_LIST);
INT vprintf(IN CHAR*,IN VA_LIST);
INT vprintf_s(IN CHAR*,IN VA_LIST);
INT vsnprintf(OUT CHAR*,IN SIZE_T,IN CHAR*,IN VA_LIST);
INT vsnprintf_s(OUT CHAR*,IN SIZE_T,IN SIZE_T,IN CHAR*,IN VA_LIST);
INT _vsnprintf_s(_OUT CHAR*,IN SIZE_T,IN SIZE_T,IN CHAR*,IN VA_LIST);
INT vsprintf_s(_OUT CHAR*,IN SIZE_T,IN CHAR*,IN VA_LIST);
INT _vscprintf(IN CHAR*,IN VA_LIST);
INT _snprintf_c(OUT CHAR*,IN SIZE_T,IN CHAR*,...);
INT _vsnprintf_c(OUT CHAR*,IN SIZE_T,IN CHAR*,IN VA_LIST);
INT _fprintf_p(IN_OUT FILE*,IN CHAR*,...);
INT _printf_p(IN CHAR*,...);
INT _sprintf_p(CHAR*,IN SIZE_T,IN CHAR*,...);
INT _vfprintf_p(IN_OUT FILE*,IN CHAR*,IN VA_LIST);
INT _vprintf_p(IN CHAR*,IN VA_LIST);
INT _vsprintf_p(CHAR*,IN SIZE_T,IN CHAR*,IN VA_LIST);
INT _scprintf_p(IN CHAR*,...);
INT _vscprintf_p(IN CHAR*,IN VA_LIST);
INT _set_printf_count_output(IN INT);
INT _get_printf_count_output();
INT _printf_l(IN CHAR*,IN _LOCALE_T,...);
INT _printf_p_l(IN CHAR*,IN _LOCALE_T,...);
INT _printf_s_l(IN CHAR*,IN _LOCALE_T,...);
INT _vprintf_l(IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vprintf_p_l(IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vprintf_s_l(IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _fprintf_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,...);
INT _fprintf_p_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,...);
INT _fprintf_s_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,...);
INT _vfprintf_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vfprintf_p_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vfprintf_s_l(IN_OUT FILE*,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _sprintf_l(OUT CHAR*,IN CHAR*,IN _LOCALE_T,...);
INT _sprintf_p_l(CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
INT _sprintf_s_l(OUT CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
INT _vsprintf_l(OUT CHAR*,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vsprintf_p_l(CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vsprintf_s_l(OUT CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _scprintf_l(IN CHAR*,IN _LOCALE_T,...);
INT _scprintf_p_l(IN CHAR*,IN _LOCALE_T,...);
INT _vscprintf_l(IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vscprintf_p_l(IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _snprintf_l(OUT CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
INT _snprintf_c_l(OUT CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
INT _snprintf_s_l(OUT CHAR*,IN SIZE_T,IN SIZE_T,IN CHAR*,IN _LOCALE_T,...);
INT _vsnprintf_l(OUT CHAR*,IN SIZE_T,IN CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vsnprintf_c_l(OUT CHAR*,IN SIZE_T,CHAR*,IN _LOCALE_T,IN VA_LIST);
INT _vsnprintf_s_l(OUT CHAR*,IN SIZE_T,IN SIZE_T,IN CHAR* ,IN _LOCALE_T,IN VA_LIST);
FILE* _wfsopen(IN WCHAR_T*,IN WCHAR_T*,IN INT);
WINT_T fgetwc(IN_OUT FILE*);
WINT_T _fgetwchar(VOID);
WINT_T fputwc(IN WCHAR_T,IN_OUT FILE*);
WINT_T _fputwchar(IN WCHAR_T);
WINT_T getwc(IN_OUT FILE*);
WINT_T getwchar(VOID);
WINT_T putwc(IN WCHAR_T,IN_OUT FILE*);
WINT_T putwchar(IN WCHAR_T);
WINT_T ungetwc(IN WINT_T,IN_OUT FILE*);
WCHAR_T* fgetws(OUT WCHAR_T*,IN INT,IN_OUT FILE*);
INT fputws(IN WCHAR_T*,IN_OUT FILE*);
WCHAR_T* _getws_s(OUT WCHAR_T*,IN SIZE_T);
INT _putws(IN WCHAR_T*);
INT fwprintf(IN_OUT FILE*,IN WCHAR_T*,...);
INT fwprintf_s(IN_OUT FILE*,IN WCHAR_T*,...);
INT wprintf(IN WCHAR_T*,...);
INT wprintf_s(IN WCHAR_T*,...);
INT _scwprintf(IN WCHAR_T*,...);
INT vfwprintf(IN_OUT FILE*,IN WCHAR_T*,IN VA_LIST);
INT vfwprintf_s(IN_OUT FILE*,IN WCHAR_T*,IN VA_LIST);
INT vwprintf(IN WCHAR_T*,IN VA_LIST);
INT vwprintf_s(IN WCHAR_T*,IN VA_LIST);
INT swprintf_s(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,...);
INT vswprintf_s(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN VA_LIST);
INT _swprintf_c(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,...);
INT _vswprintf_c(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN VA_LIST);
INT _snwprintf_s(OUT WCHAR_T*,IN SIZE_T,IN SIZE_T,IN WCHAR_T*,...);
INT _snwprintf(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,...);
INT _vsnwprintf_s(OUT WCHAR_T*,IN SIZE_T,IN SIZE_T,IN WCHAR_T*,IN VA_LIST);
INT _fwprintf_p(IN_OUT FILE*,IN WCHAR_T*,...);
INT _wprintf_p(IN WCHAR_T*,...);
INT _vfwprintf_p(IN_OUT FILE*,IN WCHAR_T*,IN VA_LIST);
INT _vwprintf_p(IN WCHAR_T*,IN VA_LIST);
INT _swprintf_p(WCHAR_T*,IN SIZE_T,IN WCHAR_T*,...);
INT _vswprintf_p(WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN VA_LIST);
INT _scwprintf_p(IN WCHAR_T*,...);
INT _vscwprintf_p(IN WCHAR_T*,IN VA_LIST);
INT _wprintf_l(IN WCHAR_T*,IN _LOCALE_T,...);
INT _wprintf_p_l(IN WCHAR_T*,IN _LOCALE_T,...);
INT _wprintf_s_l(IN WCHAR_T*,IN _LOCALE_T,...);
INT _vwprintf_l(IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vwprintf_p_l(IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vwprintf_s_l(IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _fwprintf_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,...);
INT _fwprintf_p_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,...);
INT _fwprintf_s_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,...);
INT _vfwprintf_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vfwprintf_p_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vfwprintf_s_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _swprintf_c_l(WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT _swprintf_p_l(WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT _swprintf_s_l(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT _vswprintf_c_l(WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vswprintf_p_l(WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vswprintf_s_l(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _scwprintf_l(IN WCHAR_T*,IN _LOCALE_T,...);
INT _scwprintf_p_l(IN WCHAR_T*,IN _LOCALE_T,...);
INT _vscwprintf_p_l(IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _snwprintf_l(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT _snwprintf_s_l(OUT WCHAR_T*,IN SIZE_T,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT _vsnwprintf_l(OUT WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT _vsnwprintf_s_l(OUT WCHAR_T*,IN SIZE_T,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
WCHAR_T* _wtempnam(IN WCHAR_T*,IN WCHAR_T*);
INT _vscwprintf(IN WCHAR_T*,IN VA_LIST);
INT _vscwprintf_l(IN WCHAR_T*,IN _LOCALE_T,IN VA_LIST);
INT fwscanf(IN_OUT FILE*,IN WCHAR_T*,...);
INT _fwscanf_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,...);
INT fwscanf_s(IN_OUT FILE*,IN WCHAR_T*,...);
INT _fwscanf_s_l(IN_OUT FILE*,IN WCHAR_T*,IN _LOCALE_T,...);
INT swscanf(IN WCHAR_T*,IN WCHAR_T*,...);
INT _swscanf_l(IN WCHAR_T*,IN WCHAR_T*,IN _LOCALE_T,...);
INT swscanf_s(IN WCHAR_T*,IN WCHAR_T*,...);
INT _swscanf_s_l(IN WCHAR_T*,IN WCHAR_T*,IN _LOCALE_T,...);
INT _snwscanf(IN WCHAR_T*,IN SIZE_T,IN WCHAR_T*,...);
INT _snwscanf_l(IN WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT _snwscanf_s(IN WCHAR_T*,IN SIZE_T,IN WCHAR_T*,...);
INT _snwscanf_s_l(IN WCHAR_T*,IN SIZE_T,IN WCHAR_T*,IN _LOCALE_T,...);
INT wscanf(IN WCHAR_T*,...);
INT _wscanf_l(IN WCHAR_T*,IN _LOCALE_T,...);
INT wscanf_s(IN WCHAR_T*,...);
INT _wscanf_s_l(IN WCHAR_T*,IN _LOCALE_T,...);
FILE* _wfdopen(IN INT ,IN WCHAR_T*);
FILE* _wfopen(IN WCHAR_T*,IN WCHAR_T*);
ERRNO_T _wfopen_s(OUT FILE**,IN WCHAR_T*,IN WCHAR_T*);
FILE* _wfreopen(IN WCHAR_T*,IN WCHAR_T*,IN_OUT FILE*);
ERRNO_T _wfreopen_s(OUT FILE**,IN WCHAR_T*,IN WCHAR_T*,IN_OUT FILE*);
VOID _wperror(IN WCHAR_T*);
FILE* _wpopen(IN WCHAR_T*,IN WCHAR_T*);
INT _wremove(IN WCHAR_T*);
ERRNO_T _wtmpnam_s(OUT WCHAR_T*,IN SIZE_T);
WINT_T _fgetwc_nolock(IN_OUT FILE*);
WINT_T _fputwc_nolock(IN WCHAR_T,IN_OUT FILE*);
WINT_T _ungetwc_nolock(IN WINT_T,IN_OUT FILE*);
VOID _lock_file(IN_OUT FILE*);
VOID _unlock_file(IN_OUT FILE*);
INT _fclose_nolock(IN_OUT FILE*);
INT _fflush_nolock(IN_OUT FILE*);
SIZE_T _fread_nolock(VOID*,IN SIZE_T,IN SIZE_T,IN_OUT FILE*);
SIZE_T _fread_nolock_s(VOID*,IN SIZE_T,IN SIZE_T,IN SIZE_T,IN_OUT FILE*);
INT _fseek_nolock(IN_OUT FILE*,IN LONG,IN INT);
LONG _ftell_nolock(IN_OUT FILE*);
INT _fseeki64_nolock(IN_OUT FILE*,IN __INT64,IN INT);
__INT64 _ftelli64_nolock(IN_OUT FILE*);
SIZE_T _fwrite_nolock(IN VOID*,IN SIZE_T,IN SIZE_T,IN_OUT FILE*);
INT _ungetc_nolock(IN INT,IN_OUT FILE*);
CHAR* tempnam(IN CHAR*,IN CHAR*);
INT fcloseall(VOID);
FILE* fdopen(IN INT,IN CHAR*);
INT fgetchar(VOID);
INT fileno(IN FILE*);
INT flushall(VOID);
INT fputchar(IN INT);
INT getw(IN_OUT FILE*);
INT putw(IN INT,IN_OUT FILE*);
INT rmtmp(VOID);